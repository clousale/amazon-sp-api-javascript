/**
 * Selling Partner API for FBA Small And Light
 * The Selling Partner API for FBA Small and Light lets you help sellers manage their listings in the Small and Light program. The program reduces the cost of fulfilling orders for small and lightweight FBA inventory. You can enroll or remove items from the program and check item eligibility and enrollment status. You can also preview the estimated program fees charged to a seller for items sold while enrolled in the program.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ErrorList from '../models/ErrorList';
import SmallAndLightEligibility from '../models/SmallAndLightEligibility';
import SmallAndLightEnrollment from '../models/SmallAndLightEnrollment';
import SmallAndLightFeePreviewRequest from '../models/SmallAndLightFeePreviewRequest';
import SmallAndLightFeePreviews from '../models/SmallAndLightFeePreviews';

/**
* SmallAndLight service.
* @module client/apis/SmallAndLightApi
* @version v1
*/
export default class SmallAndLightApi {

    /**
    * Constructs a new SmallAndLightApi. 
    * @alias module:client/apis/SmallAndLightApi
    * @class
    * @param {module:client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the deleteSmallAndLightEnrollmentBySellerSKU operation.
     * @callback module:client/apis/SmallAndLightApi~deleteSmallAndLightEnrollmentBySellerSKUCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the item indicated by the specified seller SKU from the Small and Light program in the specified marketplace. If the item is not eligible for disenrollment, the ineligibility reasons are returned.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 5 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/SmallAndLightApi~deleteSmallAndLightEnrollmentBySellerSKUCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSmallAndLightEnrollmentBySellerSKU(sellerSKU, marketplaceIds, callback) {
      let postBody = null;

      let pathParams = {
        'sellerSKU': sellerSKU
      };
      let queryParams = {
        'marketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/fba/smallAndLight/v1/enrollments/{sellerSKU}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSmallAndLightEligibilityBySellerSKU operation.
     * @callback module:client/apis/SmallAndLightApi~getSmallAndLightEligibilityBySellerSKUCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/SmallAndLightEligibility} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the Small and Light program eligibility status of the item indicated by the specified seller SKU in the specified marketplace. If the item is not eligible, the ineligibility reasons are returned.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 10 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/SmallAndLightApi~getSmallAndLightEligibilityBySellerSKUCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/SmallAndLightEligibility}
     */
    getSmallAndLightEligibilityBySellerSKU(sellerSKU, marketplaceIds, callback) {
      let postBody = null;

      let pathParams = {
        'sellerSKU': sellerSKU
      };
      let queryParams = {
        'marketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SmallAndLightEligibility;

      return this.apiClient.callApi(
        '/fba/smallAndLight/v1/eligibilities/{sellerSKU}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSmallAndLightEnrollmentBySellerSKU operation.
     * @callback module:client/apis/SmallAndLightApi~getSmallAndLightEnrollmentBySellerSKUCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/SmallAndLightEnrollment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the Small and Light enrollment status for the item indicated by the specified seller SKU in the specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 10 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/SmallAndLightApi~getSmallAndLightEnrollmentBySellerSKUCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/SmallAndLightEnrollment}
     */
    getSmallAndLightEnrollmentBySellerSKU(sellerSKU, marketplaceIds, callback) {
      let postBody = null;

      let pathParams = {
        'sellerSKU': sellerSKU
      };
      let queryParams = {
        'marketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SmallAndLightEnrollment;

      return this.apiClient.callApi(
        '/fba/smallAndLight/v1/enrollments/{sellerSKU}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSmallAndLightFeePreview operation.
     * @callback module:client/apis/SmallAndLightApi~getSmallAndLightFeePreviewCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/SmallAndLightFeePreviews} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the Small and Light fee estimates for the specified items. You must include a marketplaceId parameter to retrieve the proper fee estimates for items to be sold in that marketplace. The ordering of items in the response will mirror the order of the items in the request. Duplicate ASIN/price combinations are removed.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 3 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/SmallAndLightApi~getSmallAndLightFeePreviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/SmallAndLightFeePreviews}
     */
    getSmallAndLightFeePreview(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SmallAndLightFeePreviews;

      return this.apiClient.callApi(
        '/fba/smallAndLight/v1/feePreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the putSmallAndLightEnrollmentBySellerSKU operation.
     * @callback module:client/apis/SmallAndLightApi~putSmallAndLightEnrollmentBySellerSKUCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/SmallAndLightEnrollment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enrolls the item indicated by the specified seller SKU in the Small and Light program in the specified marketplace. If the item is not eligible, the ineligibility reasons are returned.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 5 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/SmallAndLightApi~putSmallAndLightEnrollmentBySellerSKUCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/SmallAndLightEnrollment}
     */
    putSmallAndLightEnrollmentBySellerSKU(sellerSKU, marketplaceIds, callback) {
      let postBody = null;

      let pathParams = {
        'sellerSKU': sellerSKU
      };
      let queryParams = {
        'marketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SmallAndLightEnrollment;

      return this.apiClient.callApi(
        '/fba/smallAndLight/v1/enrollments/{sellerSKU}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
