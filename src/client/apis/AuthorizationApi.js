/**
 * Selling Partner API for Authorization
 * The Selling Partner API for Authorization helps developers manage authorizations and check the specific permissions associated with a given authorization.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import GetAuthorizationCodeResponse from '../models/GetAuthorizationCodeResponse';

/**
* Authorization service.
* @module client/apis/AuthorizationApi
* @version v1
*/
export default class AuthorizationApi {

    /**
    * Constructs a new AuthorizationApi. 
    * @alias module:client/apis/AuthorizationApi
    * @class
    * @param {module:client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getAuthorizationCode operation.
     * @callback module:client/apis/AuthorizationApi~getAuthorizationCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetAuthorizationCodeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the Login with Amazon (LWA) authorization code for an existing Amazon MWS authorization.
     * With the getAuthorizationCode operation, you can request a Login With Amazon (LWA) authorization code that will allow you to call a Selling Partner API on behalf of a seller who has already authorized you to call Amazon Marketplace Web Service (Amazon MWS). You specify a developer ID, an MWS auth token, and a seller ID. Taken together, these represent the Amazon MWS authorization that the seller previously granted you. The operation returns an LWA authorization code that can be exchanged for a refresh token and access token representing authorization to call the Selling Partner API on the seller&#x27;s behalf. By using this API, sellers who have already authorized you for Amazon MWS do not need to re-authorize you for the Selling Partner API.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 5 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/AuthorizationApi~getAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetAuthorizationCodeResponse}
     */
    getAuthorizationCode(sellingPartnerId, developerId, mwsAuthToken, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'sellingPartnerId': sellingPartnerId,
        'developerId': developerId,
        'mwsAuthToken': mwsAuthToken
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'payload', 'errors'];
      let returnType = GetAuthorizationCodeResponse;

      return this.apiClient.callApi(
        '/authorization/v1/authorizationCode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
