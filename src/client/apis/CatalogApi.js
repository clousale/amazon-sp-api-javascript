/**
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import GetCatalogItemResponse from '../models/GetCatalogItemResponse';
import ListCatalogCategoriesResponse from '../models/ListCatalogCategoriesResponse';
import ListCatalogItemsResponse from '../models/ListCatalogItemsResponse';

/**
* Catalog service.
* @module client/apis/CatalogApi
* @version v0
*/
export default class CatalogApi {

    /**
    * Constructs a new CatalogApi. 
    * @alias module:client/apis/CatalogApi
    * @class
    * @param {module:client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getCatalogItem operation.
     * @callback module:client/apis/CatalogApi~getCatalogItemCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetCatalogItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a specified item and its attributes.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/CatalogApi~getCatalogItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetCatalogItemResponse}
     */
    getCatalogItem(marketplaceId, asin, callback) {
      let postBody = null;

      let pathParams = {
        'asin': asin
      };
      let queryParams = {
        'MarketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCatalogItemResponse;

      return this.apiClient.callApi(
        '/catalog/v0/items/{asin}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listCatalogCategories operation.
     * @callback module:client/apis/CatalogApi~listCatalogCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/ListCatalogCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the parent categories to which an item belongs, based on the specified ASIN or SellerSKU.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/CatalogApi~listCatalogCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/ListCatalogCategoriesResponse}
     */
    listCatalogCategories(marketplaceId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'MarketplaceId': marketplaceId,
        'ASIN': opts['ASIN'],
        'SellerSKU': opts['sellerSKU']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCatalogCategoriesResponse;

      return this.apiClient.callApi(
        '/catalog/v0/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listCatalogItems operation.
     * @callback module:client/apis/CatalogApi~listCatalogItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/ListCatalogItemsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of items and their attributes, based on a search query or item identifiers that you specify. When based on a search query, provide the Query parameter and optionally, the QueryContextId parameter. When based on item identifiers, provide a single appropriate parameter based on the identifier type, and specify the associated item value. MarketplaceId is always required.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/CatalogApi~listCatalogItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/ListCatalogItemsResponse}
     */
    listCatalogItems(marketplaceId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'MarketplaceId': marketplaceId,
        'Query': opts['query'],
        'QueryContextId': opts['queryContextId'],
        'SellerSKU': opts['sellerSKU'],
        'UPC': opts['UPC'],
        'EAN': opts['EAN'],
        'ISBN': opts['ISBN'],
        'JAN': opts['JAN']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCatalogItemsResponse;

      return this.apiClient.callApi(
        '/catalog/v0/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
