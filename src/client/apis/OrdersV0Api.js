/**
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import GetOrderAddressResponse from '../models/GetOrderAddressResponse';
import GetOrderBuyerInfoResponse from '../models/GetOrderBuyerInfoResponse';
import GetOrderItemsBuyerInfoResponse from '../models/GetOrderItemsBuyerInfoResponse';
import GetOrderItemsResponse from '../models/GetOrderItemsResponse';
import GetOrderResponse from '../models/GetOrderResponse';
import GetOrdersResponse from '../models/GetOrdersResponse';

/**
* OrdersV0 service.
* @module client/apis/OrdersV0Api
* @version v0
*/
export default class OrdersV0Api {

    /**
    * Constructs a new OrdersV0Api. 
    * @alias module:client/apis/OrdersV0Api
    * @class
    * @param {module:client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getOrder operation.
     * @callback module:client/apis/OrdersV0Api~getOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the order indicated by the specified order ID.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0055 | 20 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/OrdersV0Api~getOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetOrderResponse}
     */
    getOrder(orderId, callback) {
      let postBody = null;

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderResponse;

      return this.apiClient.callApi(
        '/orders/v0/orders/{orderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOrderAddress operation.
     * @callback module:client/apis/OrdersV0Api~getOrderAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetOrderAddressResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the shipping address for the order indicated by the specified order ID.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0055 | 20 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/OrdersV0Api~getOrderAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetOrderAddressResponse}
     */
    getOrderAddress(orderId, callback) {
      let postBody = null;

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderAddressResponse;

      return this.apiClient.callApi(
        '/orders/v0/orders/{orderId}/address', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOrderBuyerInfo operation.
     * @callback module:client/apis/OrdersV0Api~getOrderBuyerInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetOrderBuyerInfoResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns buyer information for the order indicated by the specified order ID.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0055 | 20 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {module:client/apis/OrdersV0Api~getOrderBuyerInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetOrderBuyerInfoResponse}
     */
    getOrderBuyerInfo(orderId, callback) {
      let postBody = null;

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderBuyerInfoResponse;

      return this.apiClient.callApi(
        '/orders/v0/orders/{orderId}/buyerInfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOrderItems operation.
     * @callback module:client/apis/OrdersV0Api~getOrderItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetOrderItemsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns detailed order item information for the order indicated by the specified order ID. If NextToken is provided, it&#x27;s used to retrieve the next page of order items.  Note: When an order is in the Pending state (the order has been placed but payment has not been authorized), the getOrderItems operation does not return information about pricing, taxes, shipping charges, gift status or promotions for the order items in the order. After an order leaves the Pending state (this occurs when payment has been authorized) and enters the Unshipped, Partially Shipped, or Shipped state, the getOrderItems operation returns information about pricing, taxes, shipping charges, gift status and promotions for the order items in the order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0055 | 20 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/OrdersV0Api~getOrderItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetOrderItemsResponse}
     */
    getOrderItems(orderId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
        'NextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderItemsResponse;

      return this.apiClient.callApi(
        '/orders/v0/orders/{orderId}/orderItems', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOrderItemsBuyerInfo operation.
     * @callback module:client/apis/OrdersV0Api~getOrderItemsBuyerInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetOrderItemsBuyerInfoResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns buyer information in the order items of the order indicated by the specified order ID.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0055 | 20 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/OrdersV0Api~getOrderItemsBuyerInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetOrderItemsBuyerInfoResponse}
     */
    getOrderItemsBuyerInfo(orderId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
        'NextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderItemsBuyerInfoResponse;

      return this.apiClient.callApi(
        '/orders/v0/orders/{orderId}/orderItems/buyerInfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOrders operation.
     * @callback module:client/apis/OrdersV0Api~getOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/GetOrdersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns orders created or updated during the time frame indicated by the specified parameters. You can also apply a range of filtering criteria to narrow the list of orders returned. If NextToken is present, that will be used to retrieve the orders instead of other criteria.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.0055 | 20 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/OrdersV0Api~getOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/GetOrdersResponse}
     */
    getOrders(marketplaceIds, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'CreatedAfter': opts['createdAfter'],
        'CreatedBefore': opts['createdBefore'],
        'LastUpdatedAfter': opts['lastUpdatedAfter'],
        'LastUpdatedBefore': opts['lastUpdatedBefore'],
        'OrderStatuses': this.apiClient.buildCollectionParam(opts['orderStatuses'], 'csv'),
        'MarketplaceIds': this.apiClient.buildCollectionParam(marketplaceIds, 'csv'),
        'FulfillmentChannels': this.apiClient.buildCollectionParam(opts['fulfillmentChannels'], 'csv'),
        'PaymentMethods': this.apiClient.buildCollectionParam(opts['paymentMethods'], 'csv'),
        'BuyerEmail': opts['buyerEmail'],
        'SellerOrderId': opts['sellerOrderId'],
        'MaxResultsPerPage': opts['maxResultsPerPage'],
        'EasyShipShipmentStatuses': this.apiClient.buildCollectionParam(opts['easyShipShipmentStatuses'], 'csv'),
        'NextToken': opts['nextToken'],
        'AmazonOrderIds': this.apiClient.buildCollectionParam(opts['amazonOrderIds'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrdersResponse;

      return this.apiClient.callApi(
        '/orders/v0/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
