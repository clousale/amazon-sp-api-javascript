/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ListFinancialEventGroupsResponse from '../models/ListFinancialEventGroupsResponse';
import ListFinancialEventsResponse from '../models/ListFinancialEventsResponse';

/**
* Default service.
* @module client/apis/DefaultApi
* @version v0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:client/apis/DefaultApi
    * @class
    * @param {module:client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the listFinancialEventGroups operation.
     * @callback module:client/apis/DefaultApi~listFinancialEventGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/ListFinancialEventGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns financial event groups for a given date range.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/DefaultApi~listFinancialEventGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/ListFinancialEventGroupsResponse}
     */
    listFinancialEventGroups(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'MaxResultsPerPage': opts['maxResultsPerPage'],
        'FinancialEventGroupStartedBefore': opts['financialEventGroupStartedBefore'],
        'FinancialEventGroupStartedAfter': opts['financialEventGroupStartedAfter'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFinancialEventGroupsResponse;

      return this.apiClient.callApi(
        '/finances/v0/financialEventGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listFinancialEvents operation.
     * @callback module:client/apis/DefaultApi~listFinancialEventsCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/ListFinancialEventsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns financial events for the specified data range.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/DefaultApi~listFinancialEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/ListFinancialEventsResponse}
     */
    listFinancialEvents(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'MaxResultsPerPage': opts['maxResultsPerPage'],
        'PostedAfter': opts['postedAfter'],
        'PostedBefore': opts['postedBefore'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFinancialEventsResponse;

      return this.apiClient.callApi(
        '/finances/v0/financialEvents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listFinancialEventsByGroupId operation.
     * @callback module:client/apis/DefaultApi~listFinancialEventsByGroupIdCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/ListFinancialEventsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all financial events for the specified financial event group.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/DefaultApi~listFinancialEventsByGroupIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/ListFinancialEventsResponse}
     */
    listFinancialEventsByGroupId(eventGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'eventGroupId': eventGroupId
      };
      let queryParams = {
        'MaxResultsPerPage': opts['maxResultsPerPage'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFinancialEventsResponse;

      return this.apiClient.callApi(
        '/finances/v0/financialEventGroups/{eventGroupId}/financialEvents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listFinancialEventsByOrderId operation.
     * @callback module:client/apis/DefaultApi~listFinancialEventsByOrderIdCallback
     * @param {String} error Error message, if any.
     * @param {module:client/models/ListFinancialEventsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all financial events for the specified order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     * @param {Object} opts Optional parameters
     * @param {module:client/apis/DefaultApi~listFinancialEventsByOrderIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client/models/ListFinancialEventsResponse}
     */
    listFinancialEventsByOrderId(orderId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
        'MaxResultsPerPage': opts['maxResultsPerPage'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFinancialEventsResponse;

      return this.apiClient.callApi(
        '/finances/v0/orders/{orderId}/financialEvents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
