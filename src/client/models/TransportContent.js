/**
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransportDetailOutput from './TransportDetailOutput';
import TransportHeader from './TransportHeader';
import TransportResult from './TransportResult';

/**
* The TransportContent model module.
* @module client/models/TransportContent
* @version v0
*/
export default class TransportContent {
    /**
    * Constructs a new <code>TransportContent</code>.
    * Inbound shipment information, including carrier details, shipment status, and the workflow status for a request for shipment with an Amazon-partnered carrier.
    * @alias module:client/models/TransportContent
    * @class
    * @param transportHeader {module:client/models/TransportHeader} 
    * @param transportDetails {module:client/models/TransportDetailOutput} 
    * @param transportResult {module:client/models/TransportResult} 
    */

    constructor(transportHeader, transportDetails, transportResult) {
        
        
        this['TransportHeader'] = transportHeader;
        this['TransportDetails'] = transportDetails;
        this['TransportResult'] = transportResult;
        
    }

    /**
    * Constructs a <code>TransportContent</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/TransportContent} obj Optional instance to populate.
    * @return {module:client/models/TransportContent} The populated <code>TransportContent</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportContent();
                        
            
            if (data.hasOwnProperty('TransportHeader')) {
                obj['TransportHeader'] = TransportHeader.constructFromObject(data['TransportHeader']);
            }
            if (data.hasOwnProperty('TransportDetails')) {
                obj['TransportDetails'] = TransportDetailOutput.constructFromObject(data['TransportDetails']);
            }
            if (data.hasOwnProperty('TransportResult')) {
                obj['TransportResult'] = TransportResult.constructFromObject(data['TransportResult']);
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/TransportHeader} TransportHeader
    */
    'TransportHeader' = undefined;
    /**
    * @member {module:client/models/TransportDetailOutput} TransportDetails
    */
    'TransportDetails' = undefined;
    /**
    * @member {module:client/models/TransportResult} TransportResult
    */
    'TransportResult' = undefined;




}
