/**
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';
import Quantity from './Quantity';

/**
* The UpdateFulfillmentOrderItem model module.
* @module client/models/UpdateFulfillmentOrderItem
* @version v0
*/
export default class UpdateFulfillmentOrderItem {
    /**
    * Constructs a new <code>UpdateFulfillmentOrderItem</code>.
    * Item information for updating a fulfillment order.
    * @alias module:client/models/UpdateFulfillmentOrderItem
    * @class
    * @param sellerFulfillmentOrderItemId {String} Identifies the fulfillment order item to update. Created with a previous call to the createFulfillmentOrder operation.
    * @param quantity {module:client/models/Quantity} 
    */

    constructor(sellerFulfillmentOrderItemId, quantity) {
        
        
        this['SellerFulfillmentOrderItemId'] = sellerFulfillmentOrderItemId;
        this['Quantity'] = quantity;
        
    }

    /**
    * Constructs a <code>UpdateFulfillmentOrderItem</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/UpdateFulfillmentOrderItem} obj Optional instance to populate.
    * @return {module:client/models/UpdateFulfillmentOrderItem} The populated <code>UpdateFulfillmentOrderItem</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateFulfillmentOrderItem();
                        
            
            if (data.hasOwnProperty('SellerSKU')) {
                obj['SellerSKU'] = ApiClient.convertToType(data['SellerSKU'], 'String');
            }
            if (data.hasOwnProperty('SellerFulfillmentOrderItemId')) {
                obj['SellerFulfillmentOrderItemId'] = ApiClient.convertToType(data['SellerFulfillmentOrderItemId'], 'String');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = Quantity.constructFromObject(data['Quantity']);
            }
            if (data.hasOwnProperty('GiftMessage')) {
                obj['GiftMessage'] = ApiClient.convertToType(data['GiftMessage'], 'String');
            }
            if (data.hasOwnProperty('DisplayableComment')) {
                obj['DisplayableComment'] = ApiClient.convertToType(data['DisplayableComment'], 'String');
            }
            if (data.hasOwnProperty('FulfillmentNetworkSKU')) {
                obj['FulfillmentNetworkSKU'] = ApiClient.convertToType(data['FulfillmentNetworkSKU'], 'String');
            }
            if (data.hasOwnProperty('OrderItemDisposition')) {
                obj['OrderItemDisposition'] = ApiClient.convertToType(data['OrderItemDisposition'], 'String');
            }
            if (data.hasOwnProperty('PerUnitDeclaredValue')) {
                obj['PerUnitDeclaredValue'] = Currency.constructFromObject(data['PerUnitDeclaredValue']);
            }
            if (data.hasOwnProperty('PerUnitPrice')) {
                obj['PerUnitPrice'] = Currency.constructFromObject(data['PerUnitPrice']);
            }
            if (data.hasOwnProperty('PerUnitTax')) {
                obj['PerUnitTax'] = Currency.constructFromObject(data['PerUnitTax']);
            }
        }
        return obj;
    }

    /**
    * The seller SKU of the item.
    * @member {String} SellerSKU
    */
    'SellerSKU' = undefined;
    /**
    * Identifies the fulfillment order item to update. Created with a previous call to the createFulfillmentOrder operation.
    * @member {String} SellerFulfillmentOrderItemId
    */
    'SellerFulfillmentOrderItemId' = undefined;
    /**
    * @member {module:client/models/Quantity} Quantity
    */
    'Quantity' = undefined;
    /**
    * A message to the gift recipient, if applicable.
    * @member {String} GiftMessage
    */
    'GiftMessage' = undefined;
    /**
    * Item-specific text that displays in recipient-facing materials such as the outbound shipment packing slip.
    * @member {String} DisplayableComment
    */
    'DisplayableComment' = undefined;
    /**
    * Amazon's fulfillment network SKU of the item.
    * @member {String} FulfillmentNetworkSKU
    */
    'FulfillmentNetworkSKU' = undefined;
    /**
    * Indicates whether the item is sellable or unsellable.
    * @member {String} OrderItemDisposition
    */
    'OrderItemDisposition' = undefined;
    /**
    * @member {module:client/models/Currency} PerUnitDeclaredValue
    */
    'PerUnitDeclaredValue' = undefined;
    /**
    * @member {module:client/models/Currency} PerUnitPrice
    */
    'PerUnitPrice' = undefined;
    /**
    * @member {module:client/models/Currency} PerUnitTax
    */
    'PerUnitTax' = undefined;




}
