/**
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppointmentId from './AppointmentId';
import AppointmentTime from './AppointmentTime';
import Poa from './Poa';
import Technician from './Technician';

/**
* The Appointment model module.
* @module client/models/Appointment
* @version v1
*/
export default class Appointment {
    /**
    * Constructs a new <code>Appointment</code>.
    * The details of an appointment.
    * @alias module:client/models/Appointment
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Appointment</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/Appointment} obj Optional instance to populate.
    * @return {module:client/models/Appointment} The populated <code>Appointment</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Appointment();
                        
            
            if (data.hasOwnProperty('appointmentId')) {
                obj['appointmentId'] = AppointmentId.constructFromObject(data['appointmentId']);
            }
            if (data.hasOwnProperty('appointmentStatus')) {
                obj['appointmentStatus'] = ApiClient.convertToType(data['appointmentStatus'], 'String');
            }
            if (data.hasOwnProperty('appointmentTime')) {
                obj['appointmentTime'] = AppointmentTime.constructFromObject(data['appointmentTime']);
            }
            if (data.hasOwnProperty('assignedTechnicians')) {
                obj['assignedTechnicians'] = ApiClient.convertToType(data['assignedTechnicians'], [Technician]);
            }
            if (data.hasOwnProperty('rescheduledAppointmentId')) {
                obj['rescheduledAppointmentId'] = AppointmentId.constructFromObject(data['rescheduledAppointmentId']);
            }
            if (data.hasOwnProperty('poa')) {
                obj['poa'] = Poa.constructFromObject(data['poa']);
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/AppointmentId} appointmentId
    */
    'appointmentId' = undefined;
    /**
    * The status of the appointment.
    * @member {module:client/models/Appointment.AppointmentStatusEnum} appointmentStatus
    */
    'appointmentStatus' = undefined;
    /**
    * @member {module:client/models/AppointmentTime} appointmentTime
    */
    'appointmentTime' = undefined;
    /**
    * A list of technicians assigned to the service job.
    * @member {Array.<module:client/models/Technician>} assignedTechnicians
    */
    'assignedTechnicians' = undefined;
    /**
    * @member {module:client/models/AppointmentId} rescheduledAppointmentId
    */
    'rescheduledAppointmentId' = undefined;
    /**
    * @member {module:client/models/Poa} poa
    */
    'poa' = undefined;



    /**
    * Allowed values for the <code>appointmentStatus</code> property.
    * @enum {String}
    * @readonly
    */
    static AppointmentStatusEnum = {
        /**
         * value: "ACTIVE"
         * @const
         */
        "ACTIVE": "ACTIVE",
        /**
         * value: "CANCELLED"
         * @const
         */
        "CANCELLED": "CANCELLED",
        /**
         * value: "COMPLETED"
         * @const
         */
        "COMPLETED": "COMPLETED"    };

}
