/**
 * Selling Partner API for Merchant Fulfillment
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailableFormatOptionsForLabelList from './AvailableFormatOptionsForLabelList';
import AvailableShippingServiceOptions from './AvailableShippingServiceOptions';
import CurrencyAmount from './CurrencyAmount';
import LabelFormatList from './LabelFormatList';
import ShippingServiceIdentifier from './ShippingServiceIdentifier';
import ShippingServiceOptions from './ShippingServiceOptions';
import Timestamp from './Timestamp';

/**
* The ShippingService model module.
* @module client/models/ShippingService
* @version v0
*/
export default class ShippingService {
    /**
    * Constructs a new <code>ShippingService</code>.
    * A shipping service offer made by a carrier.
    * @alias module:client/models/ShippingService
    * @class
    * @param shippingServiceName {String} A plain text representation of a carrier's shipping service. For example, \"UPS Ground\" or \"FedEx Standard Overnight\". 
    * @param carrierName {String} The name of the carrier.
    * @param shippingServiceId {module:client/models/ShippingServiceIdentifier} 
    * @param shippingServiceOfferId {String} An Amazon-defined shipping service offer identifier.
    * @param shipDate {module:client/models/Timestamp} 
    * @param rate {module:client/models/CurrencyAmount} 
    * @param shippingServiceOptions {module:client/models/ShippingServiceOptions} 
    * @param requiresAdditionalSellerInputs {Boolean} When true, additional seller inputs are required.
    */

    constructor(shippingServiceName, carrierName, shippingServiceId, shippingServiceOfferId, shipDate, rate, shippingServiceOptions, requiresAdditionalSellerInputs) {
        
        
        this['ShippingServiceName'] = shippingServiceName;
        this['CarrierName'] = carrierName;
        this['ShippingServiceId'] = shippingServiceId;
        this['ShippingServiceOfferId'] = shippingServiceOfferId;
        this['ShipDate'] = shipDate;
        this['Rate'] = rate;
        this['ShippingServiceOptions'] = shippingServiceOptions;
        this['RequiresAdditionalSellerInputs'] = requiresAdditionalSellerInputs;
        
    }

    /**
    * Constructs a <code>ShippingService</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/ShippingService} obj Optional instance to populate.
    * @return {module:client/models/ShippingService} The populated <code>ShippingService</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingService();
                        
            
            if (data.hasOwnProperty('ShippingServiceName')) {
                obj['ShippingServiceName'] = ApiClient.convertToType(data['ShippingServiceName'], 'String');
            }
            if (data.hasOwnProperty('CarrierName')) {
                obj['CarrierName'] = ApiClient.convertToType(data['CarrierName'], 'String');
            }
            if (data.hasOwnProperty('ShippingServiceId')) {
                obj['ShippingServiceId'] = ShippingServiceIdentifier.constructFromObject(data['ShippingServiceId']);
            }
            if (data.hasOwnProperty('ShippingServiceOfferId')) {
                obj['ShippingServiceOfferId'] = ApiClient.convertToType(data['ShippingServiceOfferId'], 'String');
            }
            if (data.hasOwnProperty('ShipDate')) {
                obj['ShipDate'] = Timestamp.constructFromObject(data['ShipDate']);
            }
            if (data.hasOwnProperty('EarliestEstimatedDeliveryDate')) {
                obj['EarliestEstimatedDeliveryDate'] = Timestamp.constructFromObject(data['EarliestEstimatedDeliveryDate']);
            }
            if (data.hasOwnProperty('LatestEstimatedDeliveryDate')) {
                obj['LatestEstimatedDeliveryDate'] = Timestamp.constructFromObject(data['LatestEstimatedDeliveryDate']);
            }
            if (data.hasOwnProperty('Rate')) {
                obj['Rate'] = CurrencyAmount.constructFromObject(data['Rate']);
            }
            if (data.hasOwnProperty('ShippingServiceOptions')) {
                obj['ShippingServiceOptions'] = ShippingServiceOptions.constructFromObject(data['ShippingServiceOptions']);
            }
            if (data.hasOwnProperty('AvailableShippingServiceOptions')) {
                obj['AvailableShippingServiceOptions'] = AvailableShippingServiceOptions.constructFromObject(data['AvailableShippingServiceOptions']);
            }
            if (data.hasOwnProperty('AvailableLabelFormats')) {
                obj['AvailableLabelFormats'] = LabelFormatList.constructFromObject(data['AvailableLabelFormats']);
            }
            if (data.hasOwnProperty('AvailableFormatOptionsForLabel')) {
                obj['AvailableFormatOptionsForLabel'] = AvailableFormatOptionsForLabelList.constructFromObject(data['AvailableFormatOptionsForLabel']);
            }
            if (data.hasOwnProperty('RequiresAdditionalSellerInputs')) {
                obj['RequiresAdditionalSellerInputs'] = ApiClient.convertToType(data['RequiresAdditionalSellerInputs'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * A plain text representation of a carrier's shipping service. For example, \"UPS Ground\" or \"FedEx Standard Overnight\". 
    * @member {String} ShippingServiceName
    */
    'ShippingServiceName' = undefined;
    /**
    * The name of the carrier.
    * @member {String} CarrierName
    */
    'CarrierName' = undefined;
    /**
    * @member {module:client/models/ShippingServiceIdentifier} ShippingServiceId
    */
    'ShippingServiceId' = undefined;
    /**
    * An Amazon-defined shipping service offer identifier.
    * @member {String} ShippingServiceOfferId
    */
    'ShippingServiceOfferId' = undefined;
    /**
    * @member {module:client/models/Timestamp} ShipDate
    */
    'ShipDate' = undefined;
    /**
    * @member {module:client/models/Timestamp} EarliestEstimatedDeliveryDate
    */
    'EarliestEstimatedDeliveryDate' = undefined;
    /**
    * @member {module:client/models/Timestamp} LatestEstimatedDeliveryDate
    */
    'LatestEstimatedDeliveryDate' = undefined;
    /**
    * @member {module:client/models/CurrencyAmount} Rate
    */
    'Rate' = undefined;
    /**
    * @member {module:client/models/ShippingServiceOptions} ShippingServiceOptions
    */
    'ShippingServiceOptions' = undefined;
    /**
    * @member {module:client/models/AvailableShippingServiceOptions} AvailableShippingServiceOptions
    */
    'AvailableShippingServiceOptions' = undefined;
    /**
    * @member {module:client/models/LabelFormatList} AvailableLabelFormats
    */
    'AvailableLabelFormats' = undefined;
    /**
    * @member {module:client/models/AvailableFormatOptionsForLabelList} AvailableFormatOptionsForLabel
    */
    'AvailableFormatOptionsForLabel' = undefined;
    /**
    * When true, additional seller inputs are required.
    * @member {Boolean} RequiresAdditionalSellerInputs
    */
    'RequiresAdditionalSellerInputs' = undefined;




}
