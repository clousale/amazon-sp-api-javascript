/**
 * Selling Partner API for Notifications
 * The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The CreateSubscriptionRequest model module.
* @module client/models/CreateSubscriptionRequest
* @version v1
*/
export default class CreateSubscriptionRequest {
    /**
    * Constructs a new <code>CreateSubscriptionRequest</code>.
    * The request schema for the createSubscription operation.
    * @alias module:client/models/CreateSubscriptionRequest
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>CreateSubscriptionRequest</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/CreateSubscriptionRequest} obj Optional instance to populate.
    * @return {module:client/models/CreateSubscriptionRequest} The populated <code>CreateSubscriptionRequest</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSubscriptionRequest();
                        
            
            if (data.hasOwnProperty('payloadVersion')) {
                obj['payloadVersion'] = ApiClient.convertToType(data['payloadVersion'], 'String');
            }
            if (data.hasOwnProperty('destinationId')) {
                obj['destinationId'] = ApiClient.convertToType(data['destinationId'], 'String');
            }
        }
        return obj;
    }

    /**
    * The version of the payload object to be used in the notification.
    * @member {String} payloadVersion
    */
    'payloadVersion' = undefined;
    /**
    * The identifier for the destination where notifications will be delivered.
    * @member {String} destinationId
    */
    'destinationId' = undefined;




}
