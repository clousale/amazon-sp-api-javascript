/**
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
* The ReturnAuthorization model module.
* @module client/models/ReturnAuthorization
* @version v0
*/
export default class ReturnAuthorization {
    /**
    * Constructs a new <code>ReturnAuthorization</code>.
    * Return authorization information for items accepted for return.
    * @alias module:client/models/ReturnAuthorization
    * @class
    * @param returnAuthorizationId {String} An identifier for the return authorization. This identifier associates return items with the return authorization used to return them.
    * @param fulfillmentCenterId {String} An identifier for the Amazon fulfillment center that the return items should be sent to.
    * @param returnToAddress {module:client/models/Address} 
    * @param amazonRmaId {String} The return merchandise authorization (RMA) that Amazon needs to process the return.
    * @param rmaPageURL {String} A URL for a web page that contains the return authorization barcode and the mailing label. This does not include pre-paid shipping.
    */

    constructor(returnAuthorizationId, fulfillmentCenterId, returnToAddress, amazonRmaId, rmaPageURL) {
        
        
        this['ReturnAuthorizationId'] = returnAuthorizationId;
        this['FulfillmentCenterId'] = fulfillmentCenterId;
        this['ReturnToAddress'] = returnToAddress;
        this['AmazonRmaId'] = amazonRmaId;
        this['RmaPageURL'] = rmaPageURL;
        
    }

    /**
    * Constructs a <code>ReturnAuthorization</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/ReturnAuthorization} obj Optional instance to populate.
    * @return {module:client/models/ReturnAuthorization} The populated <code>ReturnAuthorization</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnAuthorization();
                        
            
            if (data.hasOwnProperty('ReturnAuthorizationId')) {
                obj['ReturnAuthorizationId'] = ApiClient.convertToType(data['ReturnAuthorizationId'], 'String');
            }
            if (data.hasOwnProperty('FulfillmentCenterId')) {
                obj['FulfillmentCenterId'] = ApiClient.convertToType(data['FulfillmentCenterId'], 'String');
            }
            if (data.hasOwnProperty('ReturnToAddress')) {
                obj['ReturnToAddress'] = Address.constructFromObject(data['ReturnToAddress']);
            }
            if (data.hasOwnProperty('AmazonRmaId')) {
                obj['AmazonRmaId'] = ApiClient.convertToType(data['AmazonRmaId'], 'String');
            }
            if (data.hasOwnProperty('RmaPageURL')) {
                obj['RmaPageURL'] = ApiClient.convertToType(data['RmaPageURL'], 'String');
            }
        }
        return obj;
    }

    /**
    * An identifier for the return authorization. This identifier associates return items with the return authorization used to return them.
    * @member {String} ReturnAuthorizationId
    */
    'ReturnAuthorizationId' = undefined;
    /**
    * An identifier for the Amazon fulfillment center that the return items should be sent to.
    * @member {String} FulfillmentCenterId
    */
    'FulfillmentCenterId' = undefined;
    /**
    * @member {module:client/models/Address} ReturnToAddress
    */
    'ReturnToAddress' = undefined;
    /**
    * The return merchandise authorization (RMA) that Amazon needs to process the return.
    * @member {String} AmazonRmaId
    */
    'AmazonRmaId' = undefined;
    /**
    * A URL for a web page that contains the return authorization barcode and the mailing label. This does not include pre-paid shipping.
    * @member {String} RmaPageURL
    */
    'RmaPageURL' = undefined;




}
