/**
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppointmentTime from './AppointmentTime';
import Technician from './Technician';

/**
* The Poa model module.
* @module client/models/Poa
* @version v1
*/
export default class Poa {
    /**
    * Constructs a new <code>Poa</code>.
    * Proof of Appointment (POA) details.
    * @alias module:client/models/Poa
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Poa</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/Poa} obj Optional instance to populate.
    * @return {module:client/models/Poa} The populated <code>Poa</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Poa();
                        
            
            if (data.hasOwnProperty('appointmentTime')) {
                obj['appointmentTime'] = AppointmentTime.constructFromObject(data['appointmentTime']);
            }
            if (data.hasOwnProperty('technicians')) {
                obj['technicians'] = ApiClient.convertToType(data['technicians'], [Technician]);
            }
            if (data.hasOwnProperty('uploadingTechnician')) {
                obj['uploadingTechnician'] = ApiClient.convertToType(data['uploadingTechnician'], 'String');
            }
            if (data.hasOwnProperty('uploadTime')) {
                obj['uploadTime'] = ApiClient.convertToType(data['uploadTime'], 'Date');
            }
            if (data.hasOwnProperty('poaType')) {
                obj['poaType'] = ApiClient.convertToType(data['poaType'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/AppointmentTime} appointmentTime
    */
    'appointmentTime' = undefined;
    /**
    * A list of technicians.
    * @member {Array.<module:client/models/Technician>} technicians
    */
    'technicians' = undefined;
    /**
    * The identifier of the technician who uploaded the POA.
    * @member {String} uploadingTechnician
    */
    'uploadingTechnician' = undefined;
    /**
    * The date and time when the POA was uploaded, in ISO 8601 format.
    * @member {Date} uploadTime
    */
    'uploadTime' = undefined;
    /**
    * The type of POA uploaded.
    * @member {module:client/models/Poa.PoaTypeEnum} poaType
    */
    'poaType' = undefined;



    /**
    * Allowed values for the <code>poaType</code> property.
    * @enum {String}
    * @readonly
    */
    static PoaTypeEnum = {
        /**
         * value: "NO_SIGNATURE_DUMMY_POS"
         * @const
         */
        "NO_SIGNATURE_DUMMY_POS": "NO_SIGNATURE_DUMMY_POS",
        /**
         * value: "CUSTOMER_SIGNATURE"
         * @const
         */
        "CUSTOMER_SIGNATURE": "CUSTOMER_SIGNATURE",
        /**
         * value: "DUMMY_RECEIPT"
         * @const
         */
        "DUMMY_RECEIPT": "DUMMY_RECEIPT",
        /**
         * value: "POA_RECEIPT"
         * @const
         */
        "POA_RECEIPT": "POA_RECEIPT"    };

}
