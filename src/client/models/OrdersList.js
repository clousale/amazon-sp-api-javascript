/**
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderList from './OrderList';

/**
* The OrdersList model module.
* @module client/models/OrdersList
* @version v0
*/
export default class OrdersList {
    /**
    * Constructs a new <code>OrdersList</code>.
    * A list of orders along with additional information to make subsequent API calls.
    * @alias module:client/models/OrdersList
    * @class
    * @param orders {module:client/models/OrderList} 
    */

    constructor(orders) {
        
        
        this['Orders'] = orders;
        
    }

    /**
    * Constructs a <code>OrdersList</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/OrdersList} obj Optional instance to populate.
    * @return {module:client/models/OrdersList} The populated <code>OrdersList</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrdersList();
                        
            
            if (data.hasOwnProperty('Orders')) {
                obj['Orders'] = OrderList.constructFromObject(data['Orders']);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('LastUpdatedBefore')) {
                obj['LastUpdatedBefore'] = ApiClient.convertToType(data['LastUpdatedBefore'], 'String');
            }
            if (data.hasOwnProperty('CreatedBefore')) {
                obj['CreatedBefore'] = ApiClient.convertToType(data['CreatedBefore'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/OrderList} Orders
    */
    'Orders' = undefined;
    /**
    * When present and not empty, pass this string token in the next request to return the next response page.
    * @member {String} NextToken
    */
    'NextToken' = undefined;
    /**
    * A date used for selecting orders that were last updated before (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. All dates must be in ISO 8601 format.
    * @member {String} LastUpdatedBefore
    */
    'LastUpdatedBefore' = undefined;
    /**
    * A date used for selecting orders created before (or at) a specified time. Only orders placed before the specified time are returned. The date must be in ISO 8601 format.
    * @member {String} CreatedBefore
    */
    'CreatedBefore' = undefined;




}
