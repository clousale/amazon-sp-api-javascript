/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChargeComponent from './ChargeComponent';
import Currency from './Currency';
import FeeComponent from './FeeComponent';
import ModelDate from './ModelDate';

/**
* The CouponPaymentEvent model module.
* @module client/models/CouponPaymentEvent
* @version v0
*/
export default class CouponPaymentEvent {
    /**
    * Constructs a new <code>CouponPaymentEvent</code>.
    * An event related to coupon payments.
    * @alias module:client/models/CouponPaymentEvent
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>CouponPaymentEvent</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/CouponPaymentEvent} obj Optional instance to populate.
    * @return {module:client/models/CouponPaymentEvent} The populated <code>CouponPaymentEvent</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CouponPaymentEvent();
                        
            
            if (data.hasOwnProperty('PostedDate')) {
                obj['PostedDate'] = ModelDate.constructFromObject(data['PostedDate']);
            }
            if (data.hasOwnProperty('CouponId')) {
                obj['CouponId'] = ApiClient.convertToType(data['CouponId'], 'String');
            }
            if (data.hasOwnProperty('SellerCouponDescription')) {
                obj['SellerCouponDescription'] = ApiClient.convertToType(data['SellerCouponDescription'], 'String');
            }
            if (data.hasOwnProperty('ClipOrRedemptionCount')) {
                obj['ClipOrRedemptionCount'] = ApiClient.convertToType(data['ClipOrRedemptionCount'], 'Number');
            }
            if (data.hasOwnProperty('PaymentEventId')) {
                obj['PaymentEventId'] = ApiClient.convertToType(data['PaymentEventId'], 'String');
            }
            if (data.hasOwnProperty('FeeComponent')) {
                obj['FeeComponent'] = FeeComponent.constructFromObject(data['FeeComponent']);
            }
            if (data.hasOwnProperty('ChargeComponent')) {
                obj['ChargeComponent'] = ChargeComponent.constructFromObject(data['ChargeComponent']);
            }
            if (data.hasOwnProperty('TotalAmount')) {
                obj['TotalAmount'] = Currency.constructFromObject(data['TotalAmount']);
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/ModelDate} PostedDate
    */
    'PostedDate' = undefined;
    /**
    * A coupon identifier.
    * @member {String} CouponId
    */
    'CouponId' = undefined;
    /**
    * The description provided by the seller when they created the coupon.
    * @member {String} SellerCouponDescription
    */
    'SellerCouponDescription' = undefined;
    /**
    * The number of coupon clips or redemptions.
    * @member {Number} ClipOrRedemptionCount
    */
    'ClipOrRedemptionCount' = undefined;
    /**
    * A payment event identifier.
    * @member {String} PaymentEventId
    */
    'PaymentEventId' = undefined;
    /**
    * @member {module:client/models/FeeComponent} FeeComponent
    */
    'FeeComponent' = undefined;
    /**
    * @member {module:client/models/ChargeComponent} ChargeComponent
    */
    'ChargeComponent' = undefined;
    /**
    * @member {module:client/models/Currency} TotalAmount
    */
    'TotalAmount' = undefined;




}
