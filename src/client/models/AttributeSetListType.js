/**
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatorType from './CreatorType';
import DecimalWithUnits from './DecimalWithUnits';
import DimensionType from './DimensionType';
import Image from './Image';
import LanguageType from './LanguageType';
import Price from './Price';

/**
* The AttributeSetListType model module.
* @module client/models/AttributeSetListType
* @version v0
*/
export default class AttributeSetListType {
    /**
    * Constructs a new <code>AttributeSetListType</code>.
    * The attributes of the item.
    * @alias module:client/models/AttributeSetListType
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>AttributeSetListType</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/AttributeSetListType} obj Optional instance to populate.
    * @return {module:client/models/AttributeSetListType} The populated <code>AttributeSetListType</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributeSetListType();
                        
            
            if (data.hasOwnProperty('Actor')) {
                obj['Actor'] = ApiClient.convertToType(data['Actor'], ['String']);
            }
            if (data.hasOwnProperty('Artist')) {
                obj['Artist'] = ApiClient.convertToType(data['Artist'], ['String']);
            }
            if (data.hasOwnProperty('AspectRatio')) {
                obj['AspectRatio'] = ApiClient.convertToType(data['AspectRatio'], 'String');
            }
            if (data.hasOwnProperty('AudienceRating')) {
                obj['AudienceRating'] = ApiClient.convertToType(data['AudienceRating'], 'String');
            }
            if (data.hasOwnProperty('Author')) {
                obj['Author'] = ApiClient.convertToType(data['Author'], ['String']);
            }
            if (data.hasOwnProperty('BackFinding')) {
                obj['BackFinding'] = ApiClient.convertToType(data['BackFinding'], 'String');
            }
            if (data.hasOwnProperty('BandMaterialType')) {
                obj['BandMaterialType'] = ApiClient.convertToType(data['BandMaterialType'], 'String');
            }
            if (data.hasOwnProperty('Binding')) {
                obj['Binding'] = ApiClient.convertToType(data['Binding'], 'String');
            }
            if (data.hasOwnProperty('BlurayRegion')) {
                obj['BlurayRegion'] = ApiClient.convertToType(data['BlurayRegion'], 'String');
            }
            if (data.hasOwnProperty('Brand')) {
                obj['Brand'] = ApiClient.convertToType(data['Brand'], 'String');
            }
            if (data.hasOwnProperty('CeroAgeRating')) {
                obj['CeroAgeRating'] = ApiClient.convertToType(data['CeroAgeRating'], 'String');
            }
            if (data.hasOwnProperty('ChainType')) {
                obj['ChainType'] = ApiClient.convertToType(data['ChainType'], 'String');
            }
            if (data.hasOwnProperty('ClaspType')) {
                obj['ClaspType'] = ApiClient.convertToType(data['ClaspType'], 'String');
            }
            if (data.hasOwnProperty('Color')) {
                obj['Color'] = ApiClient.convertToType(data['Color'], 'String');
            }
            if (data.hasOwnProperty('CpuManufacturer')) {
                obj['CpuManufacturer'] = ApiClient.convertToType(data['CpuManufacturer'], 'String');
            }
            if (data.hasOwnProperty('CpuSpeed')) {
                obj['CpuSpeed'] = DecimalWithUnits.constructFromObject(data['CpuSpeed']);
            }
            if (data.hasOwnProperty('CpuType')) {
                obj['CpuType'] = ApiClient.convertToType(data['CpuType'], 'String');
            }
            if (data.hasOwnProperty('Creator')) {
                obj['Creator'] = ApiClient.convertToType(data['Creator'], [CreatorType]);
            }
            if (data.hasOwnProperty('Department')) {
                obj['Department'] = ApiClient.convertToType(data['Department'], 'String');
            }
            if (data.hasOwnProperty('Director')) {
                obj['Director'] = ApiClient.convertToType(data['Director'], ['String']);
            }
            if (data.hasOwnProperty('DisplaySize')) {
                obj['DisplaySize'] = DecimalWithUnits.constructFromObject(data['DisplaySize']);
            }
            if (data.hasOwnProperty('Edition')) {
                obj['Edition'] = ApiClient.convertToType(data['Edition'], 'String');
            }
            if (data.hasOwnProperty('EpisodeSequence')) {
                obj['EpisodeSequence'] = ApiClient.convertToType(data['EpisodeSequence'], 'String');
            }
            if (data.hasOwnProperty('EsrbAgeRating')) {
                obj['EsrbAgeRating'] = ApiClient.convertToType(data['EsrbAgeRating'], 'String');
            }
            if (data.hasOwnProperty('Feature')) {
                obj['Feature'] = ApiClient.convertToType(data['Feature'], ['String']);
            }
            if (data.hasOwnProperty('Flavor')) {
                obj['Flavor'] = ApiClient.convertToType(data['Flavor'], 'String');
            }
            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], ['String']);
            }
            if (data.hasOwnProperty('GemType')) {
                obj['GemType'] = ApiClient.convertToType(data['GemType'], ['String']);
            }
            if (data.hasOwnProperty('Genre')) {
                obj['Genre'] = ApiClient.convertToType(data['Genre'], 'String');
            }
            if (data.hasOwnProperty('GolfClubFlex')) {
                obj['GolfClubFlex'] = ApiClient.convertToType(data['GolfClubFlex'], 'String');
            }
            if (data.hasOwnProperty('GolfClubLoft')) {
                obj['GolfClubLoft'] = DecimalWithUnits.constructFromObject(data['GolfClubLoft']);
            }
            if (data.hasOwnProperty('HandOrientation')) {
                obj['HandOrientation'] = ApiClient.convertToType(data['HandOrientation'], 'String');
            }
            if (data.hasOwnProperty('HardDiskInterface')) {
                obj['HardDiskInterface'] = ApiClient.convertToType(data['HardDiskInterface'], 'String');
            }
            if (data.hasOwnProperty('HardDiskSize')) {
                obj['HardDiskSize'] = DecimalWithUnits.constructFromObject(data['HardDiskSize']);
            }
            if (data.hasOwnProperty('HardwarePlatform')) {
                obj['HardwarePlatform'] = ApiClient.convertToType(data['HardwarePlatform'], 'String');
            }
            if (data.hasOwnProperty('HazardousMaterialType')) {
                obj['HazardousMaterialType'] = ApiClient.convertToType(data['HazardousMaterialType'], 'String');
            }
            if (data.hasOwnProperty('ItemDimensions')) {
                obj['ItemDimensions'] = DimensionType.constructFromObject(data['ItemDimensions']);
            }
            if (data.hasOwnProperty('IsAdultProduct')) {
                obj['IsAdultProduct'] = ApiClient.convertToType(data['IsAdultProduct'], 'Boolean');
            }
            if (data.hasOwnProperty('IsAutographed')) {
                obj['IsAutographed'] = ApiClient.convertToType(data['IsAutographed'], 'Boolean');
            }
            if (data.hasOwnProperty('IsEligibleForTradeIn')) {
                obj['IsEligibleForTradeIn'] = ApiClient.convertToType(data['IsEligibleForTradeIn'], 'Boolean');
            }
            if (data.hasOwnProperty('IsMemorabilia')) {
                obj['IsMemorabilia'] = ApiClient.convertToType(data['IsMemorabilia'], 'Boolean');
            }
            if (data.hasOwnProperty('IssuesPerYear')) {
                obj['IssuesPerYear'] = ApiClient.convertToType(data['IssuesPerYear'], 'String');
            }
            if (data.hasOwnProperty('ItemPartNumber')) {
                obj['ItemPartNumber'] = ApiClient.convertToType(data['ItemPartNumber'], 'String');
            }
            if (data.hasOwnProperty('Label')) {
                obj['Label'] = ApiClient.convertToType(data['Label'], 'String');
            }
            if (data.hasOwnProperty('Languages')) {
                obj['Languages'] = ApiClient.convertToType(data['Languages'], [LanguageType]);
            }
            if (data.hasOwnProperty('LegalDisclaimer')) {
                obj['LegalDisclaimer'] = ApiClient.convertToType(data['LegalDisclaimer'], 'String');
            }
            if (data.hasOwnProperty('ListPrice')) {
                obj['ListPrice'] = Price.constructFromObject(data['ListPrice']);
            }
            if (data.hasOwnProperty('Manufacturer')) {
                obj['Manufacturer'] = ApiClient.convertToType(data['Manufacturer'], 'String');
            }
            if (data.hasOwnProperty('ManufacturerMaximumAge')) {
                obj['ManufacturerMaximumAge'] = DecimalWithUnits.constructFromObject(data['ManufacturerMaximumAge']);
            }
            if (data.hasOwnProperty('ManufacturerMinimumAge')) {
                obj['ManufacturerMinimumAge'] = DecimalWithUnits.constructFromObject(data['ManufacturerMinimumAge']);
            }
            if (data.hasOwnProperty('ManufacturerPartsWarrantyDescription')) {
                obj['ManufacturerPartsWarrantyDescription'] = ApiClient.convertToType(data['ManufacturerPartsWarrantyDescription'], 'String');
            }
            if (data.hasOwnProperty('MaterialType')) {
                obj['MaterialType'] = ApiClient.convertToType(data['MaterialType'], ['String']);
            }
            if (data.hasOwnProperty('MaximumResolution')) {
                obj['MaximumResolution'] = DecimalWithUnits.constructFromObject(data['MaximumResolution']);
            }
            if (data.hasOwnProperty('MediaType')) {
                obj['MediaType'] = ApiClient.convertToType(data['MediaType'], ['String']);
            }
            if (data.hasOwnProperty('MetalStamp')) {
                obj['MetalStamp'] = ApiClient.convertToType(data['MetalStamp'], 'String');
            }
            if (data.hasOwnProperty('MetalType')) {
                obj['MetalType'] = ApiClient.convertToType(data['MetalType'], 'String');
            }
            if (data.hasOwnProperty('Model')) {
                obj['Model'] = ApiClient.convertToType(data['Model'], 'String');
            }
            if (data.hasOwnProperty('NumberOfDiscs')) {
                obj['NumberOfDiscs'] = ApiClient.convertToType(data['NumberOfDiscs'], 'Number');
            }
            if (data.hasOwnProperty('NumberOfIssues')) {
                obj['NumberOfIssues'] = ApiClient.convertToType(data['NumberOfIssues'], 'Number');
            }
            if (data.hasOwnProperty('NumberOfItems')) {
                obj['NumberOfItems'] = ApiClient.convertToType(data['NumberOfItems'], 'Number');
            }
            if (data.hasOwnProperty('NumberOfPages')) {
                obj['NumberOfPages'] = ApiClient.convertToType(data['NumberOfPages'], 'Number');
            }
            if (data.hasOwnProperty('NumberOfTracks')) {
                obj['NumberOfTracks'] = ApiClient.convertToType(data['NumberOfTracks'], 'Number');
            }
            if (data.hasOwnProperty('OperatingSystem')) {
                obj['OperatingSystem'] = ApiClient.convertToType(data['OperatingSystem'], ['String']);
            }
            if (data.hasOwnProperty('OpticalZoom')) {
                obj['OpticalZoom'] = DecimalWithUnits.constructFromObject(data['OpticalZoom']);
            }
            if (data.hasOwnProperty('PackageDimensions')) {
                obj['PackageDimensions'] = DimensionType.constructFromObject(data['PackageDimensions']);
            }
            if (data.hasOwnProperty('PackageQuantity')) {
                obj['PackageQuantity'] = ApiClient.convertToType(data['PackageQuantity'], 'Number');
            }
            if (data.hasOwnProperty('PartNumber')) {
                obj['PartNumber'] = ApiClient.convertToType(data['PartNumber'], 'String');
            }
            if (data.hasOwnProperty('PegiRating')) {
                obj['PegiRating'] = ApiClient.convertToType(data['PegiRating'], 'String');
            }
            if (data.hasOwnProperty('Platform')) {
                obj['Platform'] = ApiClient.convertToType(data['Platform'], ['String']);
            }
            if (data.hasOwnProperty('ProcessorCount')) {
                obj['ProcessorCount'] = ApiClient.convertToType(data['ProcessorCount'], 'Number');
            }
            if (data.hasOwnProperty('ProductGroup')) {
                obj['ProductGroup'] = ApiClient.convertToType(data['ProductGroup'], 'String');
            }
            if (data.hasOwnProperty('ProductTypeName')) {
                obj['ProductTypeName'] = ApiClient.convertToType(data['ProductTypeName'], 'String');
            }
            if (data.hasOwnProperty('ProductTypeSubcategory')) {
                obj['ProductTypeSubcategory'] = ApiClient.convertToType(data['ProductTypeSubcategory'], 'String');
            }
            if (data.hasOwnProperty('PublicationDate')) {
                obj['PublicationDate'] = ApiClient.convertToType(data['PublicationDate'], 'String');
            }
            if (data.hasOwnProperty('Publisher')) {
                obj['Publisher'] = ApiClient.convertToType(data['Publisher'], 'String');
            }
            if (data.hasOwnProperty('RegionCode')) {
                obj['RegionCode'] = ApiClient.convertToType(data['RegionCode'], 'String');
            }
            if (data.hasOwnProperty('ReleaseDate')) {
                obj['ReleaseDate'] = ApiClient.convertToType(data['ReleaseDate'], 'String');
            }
            if (data.hasOwnProperty('RingSize')) {
                obj['RingSize'] = ApiClient.convertToType(data['RingSize'], 'String');
            }
            if (data.hasOwnProperty('RunningTime')) {
                obj['RunningTime'] = DecimalWithUnits.constructFromObject(data['RunningTime']);
            }
            if (data.hasOwnProperty('ShaftMaterial')) {
                obj['ShaftMaterial'] = ApiClient.convertToType(data['ShaftMaterial'], 'String');
            }
            if (data.hasOwnProperty('Scent')) {
                obj['Scent'] = ApiClient.convertToType(data['Scent'], 'String');
            }
            if (data.hasOwnProperty('SeasonSequence')) {
                obj['SeasonSequence'] = ApiClient.convertToType(data['SeasonSequence'], 'String');
            }
            if (data.hasOwnProperty('SeikodoProductCode')) {
                obj['SeikodoProductCode'] = ApiClient.convertToType(data['SeikodoProductCode'], 'String');
            }
            if (data.hasOwnProperty('Size')) {
                obj['Size'] = ApiClient.convertToType(data['Size'], 'String');
            }
            if (data.hasOwnProperty('SizePerPearl')) {
                obj['SizePerPearl'] = ApiClient.convertToType(data['SizePerPearl'], 'String');
            }
            if (data.hasOwnProperty('SmallImage')) {
                obj['SmallImage'] = Image.constructFromObject(data['SmallImage']);
            }
            if (data.hasOwnProperty('Studio')) {
                obj['Studio'] = ApiClient.convertToType(data['Studio'], 'String');
            }
            if (data.hasOwnProperty('SubscriptionLength')) {
                obj['SubscriptionLength'] = DecimalWithUnits.constructFromObject(data['SubscriptionLength']);
            }
            if (data.hasOwnProperty('SystemMemorySize')) {
                obj['SystemMemorySize'] = DecimalWithUnits.constructFromObject(data['SystemMemorySize']);
            }
            if (data.hasOwnProperty('SystemMemoryType')) {
                obj['SystemMemoryType'] = ApiClient.convertToType(data['SystemMemoryType'], 'String');
            }
            if (data.hasOwnProperty('TheatricalReleaseDate')) {
                obj['TheatricalReleaseDate'] = ApiClient.convertToType(data['TheatricalReleaseDate'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('TotalDiamondWeight')) {
                obj['TotalDiamondWeight'] = DecimalWithUnits.constructFromObject(data['TotalDiamondWeight']);
            }
            if (data.hasOwnProperty('TotalGemWeight')) {
                obj['TotalGemWeight'] = DecimalWithUnits.constructFromObject(data['TotalGemWeight']);
            }
            if (data.hasOwnProperty('Warranty')) {
                obj['Warranty'] = ApiClient.convertToType(data['Warranty'], 'String');
            }
            if (data.hasOwnProperty('WeeeTaxValue')) {
                obj['WeeeTaxValue'] = Price.constructFromObject(data['WeeeTaxValue']);
            }
        }
        return obj;
    }

    /**
    * The actor attributes of the item.
    * @member {Array.<String>} Actor
    */
    'Actor' = undefined;
    /**
    * The artist attributes of the item.
    * @member {Array.<String>} Artist
    */
    'Artist' = undefined;
    /**
    * The aspect ratio attribute of the item.
    * @member {String} AspectRatio
    */
    'AspectRatio' = undefined;
    /**
    * The audience rating attribute of the item.
    * @member {String} AudienceRating
    */
    'AudienceRating' = undefined;
    /**
    * The author attributes of the item.
    * @member {Array.<String>} Author
    */
    'Author' = undefined;
    /**
    * The back finding attribute of the item.
    * @member {String} BackFinding
    */
    'BackFinding' = undefined;
    /**
    * The band material type attribute of the item.
    * @member {String} BandMaterialType
    */
    'BandMaterialType' = undefined;
    /**
    * The binding attribute of the item.
    * @member {String} Binding
    */
    'Binding' = undefined;
    /**
    * The Bluray region attribute of the item.
    * @member {String} BlurayRegion
    */
    'BlurayRegion' = undefined;
    /**
    * The brand attribute of the item.
    * @member {String} Brand
    */
    'Brand' = undefined;
    /**
    * The CERO age rating attribute of the item.
    * @member {String} CeroAgeRating
    */
    'CeroAgeRating' = undefined;
    /**
    * The chain type attribute of the item.
    * @member {String} ChainType
    */
    'ChainType' = undefined;
    /**
    * The clasp type attribute of the item.
    * @member {String} ClaspType
    */
    'ClaspType' = undefined;
    /**
    * The color attribute of the item.
    * @member {String} Color
    */
    'Color' = undefined;
    /**
    * The CPU manufacturer attribute of the item.
    * @member {String} CpuManufacturer
    */
    'CpuManufacturer' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} CpuSpeed
    */
    'CpuSpeed' = undefined;
    /**
    * The CPU type attribute of the item.
    * @member {String} CpuType
    */
    'CpuType' = undefined;
    /**
    * The creator attributes of the item.
    * @member {Array.<module:client/models/CreatorType>} Creator
    */
    'Creator' = undefined;
    /**
    * The department attribute of the item.
    * @member {String} Department
    */
    'Department' = undefined;
    /**
    * The director attributes of the item.
    * @member {Array.<String>} Director
    */
    'Director' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} DisplaySize
    */
    'DisplaySize' = undefined;
    /**
    * The edition attribute of the item.
    * @member {String} Edition
    */
    'Edition' = undefined;
    /**
    * The episode sequence attribute of the item.
    * @member {String} EpisodeSequence
    */
    'EpisodeSequence' = undefined;
    /**
    * The ESRB age rating attribute of the item.
    * @member {String} EsrbAgeRating
    */
    'EsrbAgeRating' = undefined;
    /**
    * The feature attributes of the item
    * @member {Array.<String>} Feature
    */
    'Feature' = undefined;
    /**
    * The flavor attribute of the item.
    * @member {String} Flavor
    */
    'Flavor' = undefined;
    /**
    * The format attributes of the item.
    * @member {Array.<String>} Format
    */
    'Format' = undefined;
    /**
    * The gem type attributes of the item.
    * @member {Array.<String>} GemType
    */
    'GemType' = undefined;
    /**
    * The genre attribute of the item.
    * @member {String} Genre
    */
    'Genre' = undefined;
    /**
    * The golf club flex attribute of the item.
    * @member {String} GolfClubFlex
    */
    'GolfClubFlex' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} GolfClubLoft
    */
    'GolfClubLoft' = undefined;
    /**
    * The hand orientation attribute of the item.
    * @member {String} HandOrientation
    */
    'HandOrientation' = undefined;
    /**
    * The hard disk interface attribute of the item.
    * @member {String} HardDiskInterface
    */
    'HardDiskInterface' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} HardDiskSize
    */
    'HardDiskSize' = undefined;
    /**
    * The hardware platform attribute of the item.
    * @member {String} HardwarePlatform
    */
    'HardwarePlatform' = undefined;
    /**
    * The hazardous material type attribute of the item.
    * @member {String} HazardousMaterialType
    */
    'HazardousMaterialType' = undefined;
    /**
    * @member {module:client/models/DimensionType} ItemDimensions
    */
    'ItemDimensions' = undefined;
    /**
    * The adult product attribute of the item.
    * @member {Boolean} IsAdultProduct
    */
    'IsAdultProduct' = undefined;
    /**
    * The autographed attribute of the item.
    * @member {Boolean} IsAutographed
    */
    'IsAutographed' = undefined;
    /**
    * The is eligible for trade in attribute of the item.
    * @member {Boolean} IsEligibleForTradeIn
    */
    'IsEligibleForTradeIn' = undefined;
    /**
    * The is memorabilia attribute of the item.
    * @member {Boolean} IsMemorabilia
    */
    'IsMemorabilia' = undefined;
    /**
    * The issues per year attribute of the item.
    * @member {String} IssuesPerYear
    */
    'IssuesPerYear' = undefined;
    /**
    * The item part number attribute of the item.
    * @member {String} ItemPartNumber
    */
    'ItemPartNumber' = undefined;
    /**
    * The label attribute of the item.
    * @member {String} Label
    */
    'Label' = undefined;
    /**
    * The languages attribute of the item.
    * @member {Array.<module:client/models/LanguageType>} Languages
    */
    'Languages' = undefined;
    /**
    * The legal disclaimer attribute of the item.
    * @member {String} LegalDisclaimer
    */
    'LegalDisclaimer' = undefined;
    /**
    * @member {module:client/models/Price} ListPrice
    */
    'ListPrice' = undefined;
    /**
    * The manufacturer attribute of the item.
    * @member {String} Manufacturer
    */
    'Manufacturer' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} ManufacturerMaximumAge
    */
    'ManufacturerMaximumAge' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} ManufacturerMinimumAge
    */
    'ManufacturerMinimumAge' = undefined;
    /**
    * The manufacturer parts warranty description attribute of the item.
    * @member {String} ManufacturerPartsWarrantyDescription
    */
    'ManufacturerPartsWarrantyDescription' = undefined;
    /**
    * The material type attributes of the item.
    * @member {Array.<String>} MaterialType
    */
    'MaterialType' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} MaximumResolution
    */
    'MaximumResolution' = undefined;
    /**
    * The media type attributes of the item.
    * @member {Array.<String>} MediaType
    */
    'MediaType' = undefined;
    /**
    * The metal stamp attribute of the item.
    * @member {String} MetalStamp
    */
    'MetalStamp' = undefined;
    /**
    * The metal type attribute of the item.
    * @member {String} MetalType
    */
    'MetalType' = undefined;
    /**
    * The model attribute of the item.
    * @member {String} Model
    */
    'Model' = undefined;
    /**
    * The number of discs attribute of the item.
    * @member {Number} NumberOfDiscs
    */
    'NumberOfDiscs' = undefined;
    /**
    * The number of issues attribute of the item.
    * @member {Number} NumberOfIssues
    */
    'NumberOfIssues' = undefined;
    /**
    * The number of items attribute of the item.
    * @member {Number} NumberOfItems
    */
    'NumberOfItems' = undefined;
    /**
    * The number of pages attribute of the item.
    * @member {Number} NumberOfPages
    */
    'NumberOfPages' = undefined;
    /**
    * The number of tracks attribute of the item.
    * @member {Number} NumberOfTracks
    */
    'NumberOfTracks' = undefined;
    /**
    * The operating system attributes of the item.
    * @member {Array.<String>} OperatingSystem
    */
    'OperatingSystem' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} OpticalZoom
    */
    'OpticalZoom' = undefined;
    /**
    * @member {module:client/models/DimensionType} PackageDimensions
    */
    'PackageDimensions' = undefined;
    /**
    * The package quantity attribute of the item.
    * @member {Number} PackageQuantity
    */
    'PackageQuantity' = undefined;
    /**
    * The part number attribute of the item.
    * @member {String} PartNumber
    */
    'PartNumber' = undefined;
    /**
    * The PEGI rating attribute of the item.
    * @member {String} PegiRating
    */
    'PegiRating' = undefined;
    /**
    * The platform attributes of the item.
    * @member {Array.<String>} Platform
    */
    'Platform' = undefined;
    /**
    * The processor count attribute of the item.
    * @member {Number} ProcessorCount
    */
    'ProcessorCount' = undefined;
    /**
    * The product group attribute of the item.
    * @member {String} ProductGroup
    */
    'ProductGroup' = undefined;
    /**
    * The product type name attribute of the item.
    * @member {String} ProductTypeName
    */
    'ProductTypeName' = undefined;
    /**
    * The product type subcategory attribute of the item.
    * @member {String} ProductTypeSubcategory
    */
    'ProductTypeSubcategory' = undefined;
    /**
    * The publication date attribute of the item.
    * @member {String} PublicationDate
    */
    'PublicationDate' = undefined;
    /**
    * The publisher attribute of the item.
    * @member {String} Publisher
    */
    'Publisher' = undefined;
    /**
    * The region code attribute of the item.
    * @member {String} RegionCode
    */
    'RegionCode' = undefined;
    /**
    * The release date attribute of the item.
    * @member {String} ReleaseDate
    */
    'ReleaseDate' = undefined;
    /**
    * The ring size attribute of the item.
    * @member {String} RingSize
    */
    'RingSize' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} RunningTime
    */
    'RunningTime' = undefined;
    /**
    * The shaft material attribute of the item.
    * @member {String} ShaftMaterial
    */
    'ShaftMaterial' = undefined;
    /**
    * The scent attribute of the item.
    * @member {String} Scent
    */
    'Scent' = undefined;
    /**
    * The season sequence attribute of the item.
    * @member {String} SeasonSequence
    */
    'SeasonSequence' = undefined;
    /**
    * The Seikodo product code attribute of the item.
    * @member {String} SeikodoProductCode
    */
    'SeikodoProductCode' = undefined;
    /**
    * The size attribute of the item.
    * @member {String} Size
    */
    'Size' = undefined;
    /**
    * The size per pearl attribute of the item.
    * @member {String} SizePerPearl
    */
    'SizePerPearl' = undefined;
    /**
    * @member {module:client/models/Image} SmallImage
    */
    'SmallImage' = undefined;
    /**
    * The studio attribute of the item.
    * @member {String} Studio
    */
    'Studio' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} SubscriptionLength
    */
    'SubscriptionLength' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} SystemMemorySize
    */
    'SystemMemorySize' = undefined;
    /**
    * The system memory type attribute of the item.
    * @member {String} SystemMemoryType
    */
    'SystemMemoryType' = undefined;
    /**
    * The theatrical release date attribute of the item.
    * @member {String} TheatricalReleaseDate
    */
    'TheatricalReleaseDate' = undefined;
    /**
    * The title attribute of the item.
    * @member {String} Title
    */
    'Title' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} TotalDiamondWeight
    */
    'TotalDiamondWeight' = undefined;
    /**
    * @member {module:client/models/DecimalWithUnits} TotalGemWeight
    */
    'TotalGemWeight' = undefined;
    /**
    * The warranty attribute of the item.
    * @member {String} Warranty
    */
    'Warranty' = undefined;
    /**
    * @member {module:client/models/Price} WeeeTaxValue
    */
    'WeeeTaxValue' = undefined;




}
