/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FulfillmentChannelType from './FulfillmentChannelType';

/**
* The OfferCountType model module.
* @module client/models/OfferCountType
* @version v0
*/
export default class OfferCountType {
    /**
    * Constructs a new <code>OfferCountType</code>.
    * The total number of offers for the specified condition and fulfillment channel.
    * @alias module:client/models/OfferCountType
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>OfferCountType</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/OfferCountType} obj Optional instance to populate.
    * @return {module:client/models/OfferCountType} The populated <code>OfferCountType</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OfferCountType();
                        
            
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('fulfillmentChannel')) {
                obj['fulfillmentChannel'] = FulfillmentChannelType.constructFromObject(data['fulfillmentChannel']);
            }
            if (data.hasOwnProperty('OfferCount')) {
                obj['OfferCount'] = ApiClient.convertToType(data['OfferCount'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club.
    * @member {String} condition
    */
    'condition' = undefined;
    /**
    * @member {module:client/models/FulfillmentChannelType} fulfillmentChannel
    */
    'fulfillmentChannel' = undefined;
    /**
    * The number of offers in a fulfillment channel that meet a specific condition.
    * @member {Number} OfferCount
    */
    'OfferCount' = undefined;




}
