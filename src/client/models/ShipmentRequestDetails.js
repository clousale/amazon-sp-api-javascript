/**
 * Selling Partner API for Merchant Fulfillment
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import AmazonOrderId from './AmazonOrderId';
import ItemList from './ItemList';
import LabelCustomization from './LabelCustomization';
import PackageDimensions from './PackageDimensions';
import SellerOrderId from './SellerOrderId';
import ShippingServiceOptions from './ShippingServiceOptions';
import Timestamp from './Timestamp';
import Weight from './Weight';

/**
* The ShipmentRequestDetails model module.
* @module client/models/ShipmentRequestDetails
* @version v0
*/
export default class ShipmentRequestDetails {
    /**
    * Constructs a new <code>ShipmentRequestDetails</code>.
    * Shipment information required for requesting shipping service offers or for creating a shipment.
    * @alias module:client/models/ShipmentRequestDetails
    * @class
    * @param amazonOrderId {module:client/models/AmazonOrderId} 
    * @param itemList {module:client/models/ItemList} 
    * @param shipFromAddress {module:client/models/Address} 
    * @param packageDimensions {module:client/models/PackageDimensions} 
    * @param weight {module:client/models/Weight} 
    * @param shippingServiceOptions {module:client/models/ShippingServiceOptions} 
    */

    constructor(amazonOrderId, itemList, shipFromAddress, packageDimensions, weight, shippingServiceOptions) {
        
        
        this['AmazonOrderId'] = amazonOrderId;
        this['ItemList'] = itemList;
        this['ShipFromAddress'] = shipFromAddress;
        this['PackageDimensions'] = packageDimensions;
        this['Weight'] = weight;
        this['ShippingServiceOptions'] = shippingServiceOptions;
        
    }

    /**
    * Constructs a <code>ShipmentRequestDetails</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/ShipmentRequestDetails} obj Optional instance to populate.
    * @return {module:client/models/ShipmentRequestDetails} The populated <code>ShipmentRequestDetails</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShipmentRequestDetails();
                        
            
            if (data.hasOwnProperty('AmazonOrderId')) {
                obj['AmazonOrderId'] = AmazonOrderId.constructFromObject(data['AmazonOrderId']);
            }
            if (data.hasOwnProperty('SellerOrderId')) {
                obj['SellerOrderId'] = SellerOrderId.constructFromObject(data['SellerOrderId']);
            }
            if (data.hasOwnProperty('ItemList')) {
                obj['ItemList'] = ItemList.constructFromObject(data['ItemList']);
            }
            if (data.hasOwnProperty('ShipFromAddress')) {
                obj['ShipFromAddress'] = Address.constructFromObject(data['ShipFromAddress']);
            }
            if (data.hasOwnProperty('PackageDimensions')) {
                obj['PackageDimensions'] = PackageDimensions.constructFromObject(data['PackageDimensions']);
            }
            if (data.hasOwnProperty('Weight')) {
                obj['Weight'] = Weight.constructFromObject(data['Weight']);
            }
            if (data.hasOwnProperty('MustArriveByDate')) {
                obj['MustArriveByDate'] = Timestamp.constructFromObject(data['MustArriveByDate']);
            }
            if (data.hasOwnProperty('ShipDate')) {
                obj['ShipDate'] = Timestamp.constructFromObject(data['ShipDate']);
            }
            if (data.hasOwnProperty('ShippingServiceOptions')) {
                obj['ShippingServiceOptions'] = ShippingServiceOptions.constructFromObject(data['ShippingServiceOptions']);
            }
            if (data.hasOwnProperty('LabelCustomization')) {
                obj['LabelCustomization'] = LabelCustomization.constructFromObject(data['LabelCustomization']);
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/AmazonOrderId} AmazonOrderId
    */
    'AmazonOrderId' = undefined;
    /**
    * @member {module:client/models/SellerOrderId} SellerOrderId
    */
    'SellerOrderId' = undefined;
    /**
    * @member {module:client/models/ItemList} ItemList
    */
    'ItemList' = undefined;
    /**
    * @member {module:client/models/Address} ShipFromAddress
    */
    'ShipFromAddress' = undefined;
    /**
    * @member {module:client/models/PackageDimensions} PackageDimensions
    */
    'PackageDimensions' = undefined;
    /**
    * @member {module:client/models/Weight} Weight
    */
    'Weight' = undefined;
    /**
    * @member {module:client/models/Timestamp} MustArriveByDate
    */
    'MustArriveByDate' = undefined;
    /**
    * @member {module:client/models/Timestamp} ShipDate
    */
    'ShipDate' = undefined;
    /**
    * @member {module:client/models/ShippingServiceOptions} ShippingServiceOptions
    */
    'ShippingServiceOptions' = undefined;
    /**
    * @member {module:client/models/LabelCustomization} LabelCustomization
    */
    'LabelCustomization' = undefined;




}
