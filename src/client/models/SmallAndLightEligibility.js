/**
 * Selling Partner API for FBA Small And Light
 * The Selling Partner API for FBA Small and Light lets you help sellers manage their listings in the Small and Light program. The program reduces the cost of fulfilling orders for small and lightweight FBA inventory. You can enroll or remove items from the program and check item eligibility and enrollment status. You can also preview the estimated program fees charged to a seller for items sold while enrolled in the program.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarketplaceId from './MarketplaceId';
import SellerSKU from './SellerSKU';
import SmallAndLightEligibilityStatus from './SmallAndLightEligibilityStatus';

/**
* The SmallAndLightEligibility model module.
* @module client/models/SmallAndLightEligibility
* @version v1
*/
export default class SmallAndLightEligibility {
    /**
    * Constructs a new <code>SmallAndLightEligibility</code>.
    * The Small and Light eligibility status of the item indicated by the specified seller SKU.
    * @alias module:client/models/SmallAndLightEligibility
    * @class
    * @param marketplaceId {module:client/models/MarketplaceId} 
    * @param sellerSKU {module:client/models/SellerSKU} 
    * @param status {module:client/models/SmallAndLightEligibilityStatus} 
    */

    constructor(marketplaceId, sellerSKU, status) {
        
        
        this['marketplaceId'] = marketplaceId;
        this['sellerSKU'] = sellerSKU;
        this['status'] = status;
        
    }

    /**
    * Constructs a <code>SmallAndLightEligibility</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/SmallAndLightEligibility} obj Optional instance to populate.
    * @return {module:client/models/SmallAndLightEligibility} The populated <code>SmallAndLightEligibility</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SmallAndLightEligibility();
                        
            
            if (data.hasOwnProperty('marketplaceId')) {
                obj['marketplaceId'] = MarketplaceId.constructFromObject(data['marketplaceId']);
            }
            if (data.hasOwnProperty('sellerSKU')) {
                obj['sellerSKU'] = SellerSKU.constructFromObject(data['sellerSKU']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = SmallAndLightEligibilityStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
    * @member {module:client/models/MarketplaceId} marketplaceId
    */
    'marketplaceId' = undefined;
    /**
    * @member {module:client/models/SellerSKU} sellerSKU
    */
    'sellerSKU' = undefined;
    /**
    * @member {module:client/models/SmallAndLightEligibilityStatus} status
    */
    'status' = undefined;




}
