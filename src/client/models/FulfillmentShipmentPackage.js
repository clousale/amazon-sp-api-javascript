/**
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Timestamp from './Timestamp';

/**
* The FulfillmentShipmentPackage model module.
* @module client/models/FulfillmentShipmentPackage
* @version v0
*/
export default class FulfillmentShipmentPackage {
    /**
    * Constructs a new <code>FulfillmentShipmentPackage</code>.
    * Package information for a shipment in a fulfillment order.
    * @alias module:client/models/FulfillmentShipmentPackage
    * @class
    * @param packageNumber {Number} Identifies a package in a shipment.
    * @param carrierCode {String} Identifies the carrier who will deliver the shipment to the recipient.
    */

    constructor(packageNumber, carrierCode) {
        
        
        this['PackageNumber'] = packageNumber;
        this['CarrierCode'] = carrierCode;
        
    }

    /**
    * Constructs a <code>FulfillmentShipmentPackage</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/FulfillmentShipmentPackage} obj Optional instance to populate.
    * @return {module:client/models/FulfillmentShipmentPackage} The populated <code>FulfillmentShipmentPackage</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FulfillmentShipmentPackage();
                        
            
            if (data.hasOwnProperty('PackageNumber')) {
                obj['PackageNumber'] = ApiClient.convertToType(data['PackageNumber'], 'Number');
            }
            if (data.hasOwnProperty('CarrierCode')) {
                obj['CarrierCode'] = ApiClient.convertToType(data['CarrierCode'], 'String');
            }
            if (data.hasOwnProperty('TrackingNumber')) {
                obj['TrackingNumber'] = ApiClient.convertToType(data['TrackingNumber'], 'String');
            }
            if (data.hasOwnProperty('EstimatedArrivalDateTime')) {
                obj['EstimatedArrivalDateTime'] = Timestamp.constructFromObject(data['EstimatedArrivalDateTime']);
            }
        }
        return obj;
    }

    /**
    * Identifies a package in a shipment.
    * @member {Number} PackageNumber
    */
    'PackageNumber' = undefined;
    /**
    * Identifies the carrier who will deliver the shipment to the recipient.
    * @member {String} CarrierCode
    */
    'CarrierCode' = undefined;
    /**
    * The tracking number, if provided, can be used to obtain tracking and delivery information.
    * @member {String} TrackingNumber
    */
    'TrackingNumber' = undefined;
    /**
    * @member {module:client/models/Timestamp} EstimatedArrivalDateTime
    */
    'EstimatedArrivalDateTime' = undefined;




}
