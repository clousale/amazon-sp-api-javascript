/**
 * Selling Partner API for Reports
 * The Selling Partner API for Reports lets you retrieve and manage a variety of reports that can help selling partners manage their businesses.
 *
 * OpenAPI spec version: 2020-09-04
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportOptions from './ReportOptions';

/**
* The ReportSchedule model module.
* @module client/models/ReportSchedule
* @version 2020-09-04
*/
export default class ReportSchedule {
    /**
    * Constructs a new <code>ReportSchedule</code>.
    * Detailed information about a report schedule.
    * @alias module:client/models/ReportSchedule
    * @class
    * @param reportScheduleId {String} The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
    * @param reportType {String} The report type.
    * @param period {String} An ISO 8601 period value that indicates how often a report should be created.
    */

    constructor(reportScheduleId, reportType, period) {
        
        
        this['reportScheduleId'] = reportScheduleId;
        this['reportType'] = reportType;
        this['period'] = period;
        
    }

    /**
    * Constructs a <code>ReportSchedule</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/ReportSchedule} obj Optional instance to populate.
    * @return {module:client/models/ReportSchedule} The populated <code>ReportSchedule</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportSchedule();
                        
            
            if (data.hasOwnProperty('reportScheduleId')) {
                obj['reportScheduleId'] = ApiClient.convertToType(data['reportScheduleId'], 'String');
            }
            if (data.hasOwnProperty('reportType')) {
                obj['reportType'] = ApiClient.convertToType(data['reportType'], 'String');
            }
            if (data.hasOwnProperty('marketplaceIds')) {
                obj['marketplaceIds'] = ApiClient.convertToType(data['marketplaceIds'], ['String']);
            }
            if (data.hasOwnProperty('reportOptions')) {
                obj['reportOptions'] = ReportOptions.constructFromObject(data['reportOptions']);
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
            if (data.hasOwnProperty('nextReportCreationTime')) {
                obj['nextReportCreationTime'] = ApiClient.convertToType(data['nextReportCreationTime'], 'Date');
            }
        }
        return obj;
    }

    /**
    * The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
    * @member {String} reportScheduleId
    */
    'reportScheduleId' = undefined;
    /**
    * The report type.
    * @member {String} reportType
    */
    'reportType' = undefined;
    /**
    * A list of marketplace identifiers. The report document's contents will contain data for all of the specified marketplaces, unless the report type indicates otherwise.
    * @member {Array.<String>} marketplaceIds
    */
    'marketplaceIds' = undefined;
    /**
    * @member {module:client/models/ReportOptions} reportOptions
    */
    'reportOptions' = undefined;
    /**
    * An ISO 8601 period value that indicates how often a report should be created.
    * @member {String} period
    */
    'period' = undefined;
    /**
    * The date and time when the schedule will create its next report, in ISO 8601 date time format.
    * @member {Date} nextReportCreationTime
    */
    'nextReportCreationTime' = undefined;




}
