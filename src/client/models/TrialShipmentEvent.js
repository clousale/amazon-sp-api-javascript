/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeeComponentList from './FeeComponentList';
import ModelDate from './ModelDate';

/**
* The TrialShipmentEvent model module.
* @module client/models/TrialShipmentEvent
* @version v0
*/
export default class TrialShipmentEvent {
    /**
    * Constructs a new <code>TrialShipmentEvent</code>.
    * An event related to a trial shipment.
    * @alias module:client/models/TrialShipmentEvent
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>TrialShipmentEvent</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/TrialShipmentEvent} obj Optional instance to populate.
    * @return {module:client/models/TrialShipmentEvent} The populated <code>TrialShipmentEvent</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrialShipmentEvent();
                        
            
            if (data.hasOwnProperty('AmazonOrderId')) {
                obj['AmazonOrderId'] = ApiClient.convertToType(data['AmazonOrderId'], 'String');
            }
            if (data.hasOwnProperty('FinancialEventGroupId')) {
                obj['FinancialEventGroupId'] = ApiClient.convertToType(data['FinancialEventGroupId'], 'String');
            }
            if (data.hasOwnProperty('PostedDate')) {
                obj['PostedDate'] = ModelDate.constructFromObject(data['PostedDate']);
            }
            if (data.hasOwnProperty('SKU')) {
                obj['SKU'] = ApiClient.convertToType(data['SKU'], 'String');
            }
            if (data.hasOwnProperty('FeeList')) {
                obj['FeeList'] = FeeComponentList.constructFromObject(data['FeeList']);
            }
        }
        return obj;
    }

    /**
    * An Amazon-defined identifier for an order.
    * @member {String} AmazonOrderId
    */
    'AmazonOrderId' = undefined;
    /**
    * The identifier of the financial event group.
    * @member {String} FinancialEventGroupId
    */
    'FinancialEventGroupId' = undefined;
    /**
    * @member {module:client/models/ModelDate} PostedDate
    */
    'PostedDate' = undefined;
    /**
    * The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API.
    * @member {String} SKU
    */
    'SKU' = undefined;
    /**
    * @member {module:client/models/FeeComponentList} FeeList
    */
    'FeeList' = undefined;




}
