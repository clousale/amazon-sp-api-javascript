/**
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FulfillmentShipmentItemList from './FulfillmentShipmentItemList';
import FulfillmentShipmentPackageList from './FulfillmentShipmentPackageList';
import Timestamp from './Timestamp';

/**
* The FulfillmentShipment model module.
* @module client/models/FulfillmentShipment
* @version v0
*/
export default class FulfillmentShipment {
    /**
    * Constructs a new <code>FulfillmentShipment</code>.
    * Delivery and item information for a shipment in a fulfillment order.
    * @alias module:client/models/FulfillmentShipment
    * @class
    * @param amazonShipmentId {String} A shipment identifier assigned by Amazon.
    * @param fulfillmentCenterId {String} An identifier for the fulfillment center that the shipment will be sent from.
    * @param fulfillmentShipmentStatus {module:client/models/FulfillmentShipment.FulfillmentShipmentStatusEnum} The current status of the shipment.
    * @param fulfillmentShipmentItem {module:client/models/FulfillmentShipmentItemList} 
    */

    constructor(amazonShipmentId, fulfillmentCenterId, fulfillmentShipmentStatus, fulfillmentShipmentItem) {
        
        
        this['AmazonShipmentId'] = amazonShipmentId;
        this['FulfillmentCenterId'] = fulfillmentCenterId;
        this['FulfillmentShipmentStatus'] = fulfillmentShipmentStatus;
        this['FulfillmentShipmentItem'] = fulfillmentShipmentItem;
        
    }

    /**
    * Constructs a <code>FulfillmentShipment</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/FulfillmentShipment} obj Optional instance to populate.
    * @return {module:client/models/FulfillmentShipment} The populated <code>FulfillmentShipment</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FulfillmentShipment();
                        
            
            if (data.hasOwnProperty('AmazonShipmentId')) {
                obj['AmazonShipmentId'] = ApiClient.convertToType(data['AmazonShipmentId'], 'String');
            }
            if (data.hasOwnProperty('FulfillmentCenterId')) {
                obj['FulfillmentCenterId'] = ApiClient.convertToType(data['FulfillmentCenterId'], 'String');
            }
            if (data.hasOwnProperty('FulfillmentShipmentStatus')) {
                obj['FulfillmentShipmentStatus'] = ApiClient.convertToType(data['FulfillmentShipmentStatus'], 'String');
            }
            if (data.hasOwnProperty('ShippingDateTime')) {
                obj['ShippingDateTime'] = Timestamp.constructFromObject(data['ShippingDateTime']);
            }
            if (data.hasOwnProperty('EstimatedArrivalDateTime')) {
                obj['EstimatedArrivalDateTime'] = Timestamp.constructFromObject(data['EstimatedArrivalDateTime']);
            }
            if (data.hasOwnProperty('FulfillmentShipmentItem')) {
                obj['FulfillmentShipmentItem'] = FulfillmentShipmentItemList.constructFromObject(data['FulfillmentShipmentItem']);
            }
            if (data.hasOwnProperty('FulfillmentShipmentPackage')) {
                obj['FulfillmentShipmentPackage'] = FulfillmentShipmentPackageList.constructFromObject(data['FulfillmentShipmentPackage']);
            }
        }
        return obj;
    }

    /**
    * A shipment identifier assigned by Amazon.
    * @member {String} AmazonShipmentId
    */
    'AmazonShipmentId' = undefined;
    /**
    * An identifier for the fulfillment center that the shipment will be sent from.
    * @member {String} FulfillmentCenterId
    */
    'FulfillmentCenterId' = undefined;
    /**
    * The current status of the shipment.
    * @member {module:client/models/FulfillmentShipment.FulfillmentShipmentStatusEnum} FulfillmentShipmentStatus
    */
    'FulfillmentShipmentStatus' = undefined;
    /**
    * @member {module:client/models/Timestamp} ShippingDateTime
    */
    'ShippingDateTime' = undefined;
    /**
    * @member {module:client/models/Timestamp} EstimatedArrivalDateTime
    */
    'EstimatedArrivalDateTime' = undefined;
    /**
    * @member {module:client/models/FulfillmentShipmentItemList} FulfillmentShipmentItem
    */
    'FulfillmentShipmentItem' = undefined;
    /**
    * @member {module:client/models/FulfillmentShipmentPackageList} FulfillmentShipmentPackage
    */
    'FulfillmentShipmentPackage' = undefined;



    /**
    * Allowed values for the <code>FulfillmentShipmentStatus</code> property.
    * @enum {String}
    * @readonly
    */
    static FulfillmentShipmentStatusEnum = {
        /**
         * value: "PENDING"
         * @const
         */
        "PENDING": "PENDING",
        /**
         * value: "SHIPPED"
         * @const
         */
        "SHIPPED": "SHIPPED",
        /**
         * value: "CANCELLED_BY_FULFILLER"
         * @const
         */
        "CANCELLED_BY_FULFILLER": "CANCELLED_BY_FULFILLER",
        /**
         * value: "CANCELLED_BY_SELLER"
         * @const
         */
        "CANCELLED_BY_SELLER": "CANCELLED_BY_SELLER"    };

}
