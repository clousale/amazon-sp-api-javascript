/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PriceType from './PriceType';

/**
* The CompetitivePriceType model module.
* @module client/models/CompetitivePriceType
* @version v0
*/
export default class CompetitivePriceType {
    /**
    * Constructs a new <code>CompetitivePriceType</code>.
    * @alias module:client/models/CompetitivePriceType
    * @class
    * @param competitivePriceId {String} The pricing model for each price that is returned.  Possible values:  * 1 - New Buy Box Price. * 2 - Used Buy Box Price.
    * @param price {module:client/models/PriceType} 
    */

    constructor(competitivePriceId, price) {
        
        
        this['CompetitivePriceId'] = competitivePriceId;
        this['Price'] = price;
        
    }

    /**
    * Constructs a <code>CompetitivePriceType</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/CompetitivePriceType} obj Optional instance to populate.
    * @return {module:client/models/CompetitivePriceType} The populated <code>CompetitivePriceType</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompetitivePriceType();
                        
            
            if (data.hasOwnProperty('CompetitivePriceId')) {
                obj['CompetitivePriceId'] = ApiClient.convertToType(data['CompetitivePriceId'], 'String');
            }
            if (data.hasOwnProperty('Price')) {
                obj['Price'] = PriceType.constructFromObject(data['Price']);
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('subcondition')) {
                obj['subcondition'] = ApiClient.convertToType(data['subcondition'], 'String');
            }
            if (data.hasOwnProperty('belongsToRequester')) {
                obj['belongsToRequester'] = ApiClient.convertToType(data['belongsToRequester'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * The pricing model for each price that is returned.  Possible values:  * 1 - New Buy Box Price. * 2 - Used Buy Box Price.
    * @member {String} CompetitivePriceId
    */
    'CompetitivePriceId' = undefined;
    /**
    * @member {module:client/models/PriceType} Price
    */
    'Price' = undefined;
    /**
    * Indicates the condition of the item whose pricing information is returned. Possible values are: New, Used, Collectible, Refurbished, or Club.
    * @member {String} condition
    */
    'condition' = undefined;
    /**
    * Indicates the subcondition of the item whose pricing information is returned. Possible values are: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, or Other.
    * @member {String} subcondition
    */
    'subcondition' = undefined;
    /**
    *  Indicates whether or not the pricing information is for an offer listing that belongs to the requester. The requester is the seller associated with the SellerId that was submitted with the request. Possible values are: true and false.
    * @member {Boolean} belongsToRequester
    */
    'belongsToRequester' = undefined;




}
