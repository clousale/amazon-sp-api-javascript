/**
 * Selling Partner API for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The TrackingAddress model module.
* @module client/models/TrackingAddress
* @version v0
*/
export default class TrackingAddress {
    /**
    * Constructs a new <code>TrackingAddress</code>.
    * Address information for tracking the package.
    * @alias module:client/models/TrackingAddress
    * @class
    * @param city {String} The city.
    * @param state {String} The state.
    * @param country {String} The country.
    */

    constructor(city, state, country) {
        
        
        this['City'] = city;
        this['State'] = state;
        this['Country'] = country;
        
    }

    /**
    * Constructs a <code>TrackingAddress</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/TrackingAddress} obj Optional instance to populate.
    * @return {module:client/models/TrackingAddress} The populated <code>TrackingAddress</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrackingAddress();
                        
            
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
        }
        return obj;
    }

    /**
    * The city.
    * @member {String} City
    */
    'City' = undefined;
    /**
    * The state.
    * @member {String} State
    */
    'State' = undefined;
    /**
    * The country.
    * @member {String} Country
    */
    'Country' = undefined;




}
