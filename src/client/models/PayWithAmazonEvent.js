/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChargeComponent from './ChargeComponent';
import FeeComponentList from './FeeComponentList';
import ModelDate from './ModelDate';

/**
* The PayWithAmazonEvent model module.
* @module client/models/PayWithAmazonEvent
* @version v0
*/
export default class PayWithAmazonEvent {
    /**
    * Constructs a new <code>PayWithAmazonEvent</code>.
    * An event related to the seller&#x27;s Pay with Amazon account.
    * @alias module:client/models/PayWithAmazonEvent
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>PayWithAmazonEvent</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/PayWithAmazonEvent} obj Optional instance to populate.
    * @return {module:client/models/PayWithAmazonEvent} The populated <code>PayWithAmazonEvent</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayWithAmazonEvent();
                        
            
            if (data.hasOwnProperty('SellerOrderId')) {
                obj['SellerOrderId'] = ApiClient.convertToType(data['SellerOrderId'], 'String');
            }
            if (data.hasOwnProperty('TransactionPostedDate')) {
                obj['TransactionPostedDate'] = ModelDate.constructFromObject(data['TransactionPostedDate']);
            }
            if (data.hasOwnProperty('BusinessObjectType')) {
                obj['BusinessObjectType'] = ApiClient.convertToType(data['BusinessObjectType'], 'String');
            }
            if (data.hasOwnProperty('SalesChannel')) {
                obj['SalesChannel'] = ApiClient.convertToType(data['SalesChannel'], 'String');
            }
            if (data.hasOwnProperty('Charge')) {
                obj['Charge'] = ChargeComponent.constructFromObject(data['Charge']);
            }
            if (data.hasOwnProperty('FeeList')) {
                obj['FeeList'] = FeeComponentList.constructFromObject(data['FeeList']);
            }
            if (data.hasOwnProperty('PaymentAmountType')) {
                obj['PaymentAmountType'] = ApiClient.convertToType(data['PaymentAmountType'], 'String');
            }
            if (data.hasOwnProperty('AmountDescription')) {
                obj['AmountDescription'] = ApiClient.convertToType(data['AmountDescription'], 'String');
            }
            if (data.hasOwnProperty('FulfillmentChannel')) {
                obj['FulfillmentChannel'] = ApiClient.convertToType(data['FulfillmentChannel'], 'String');
            }
            if (data.hasOwnProperty('StoreName')) {
                obj['StoreName'] = ApiClient.convertToType(data['StoreName'], 'String');
            }
        }
        return obj;
    }

    /**
    * An order identifier that is specified by the seller.
    * @member {String} SellerOrderId
    */
    'SellerOrderId' = undefined;
    /**
    * @member {module:client/models/ModelDate} TransactionPostedDate
    */
    'TransactionPostedDate' = undefined;
    /**
    * The type of business object.
    * @member {String} BusinessObjectType
    */
    'BusinessObjectType' = undefined;
    /**
    * The sales channel for the transaction.
    * @member {String} SalesChannel
    */
    'SalesChannel' = undefined;
    /**
    * @member {module:client/models/ChargeComponent} Charge
    */
    'Charge' = undefined;
    /**
    * @member {module:client/models/FeeComponentList} FeeList
    */
    'FeeList' = undefined;
    /**
    * The type of payment.  Possible values:  * Sales
    * @member {String} PaymentAmountType
    */
    'PaymentAmountType' = undefined;
    /**
    * A short description of this payment event.
    * @member {String} AmountDescription
    */
    'AmountDescription' = undefined;
    /**
    * The fulfillment channel.  Possible values:  * AFN - Amazon Fulfillment Network (Fulfillment by Amazon)  * MFN - Merchant Fulfillment Network (self-fulfilled)
    * @member {String} FulfillmentChannel
    */
    'FulfillmentChannel' = undefined;
    /**
    * The store name where the event occurred.
    * @member {String} StoreName
    */
    'StoreName' = undefined;




}
