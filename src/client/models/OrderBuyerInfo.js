/**
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuyerTaxInfo from './BuyerTaxInfo';

/**
* The OrderBuyerInfo model module.
* @module client/models/OrderBuyerInfo
* @version v0
*/
export default class OrderBuyerInfo {
    /**
    * Constructs a new <code>OrderBuyerInfo</code>.
    * Buyer information for an order.
    * @alias module:client/models/OrderBuyerInfo
    * @class
    * @param amazonOrderId {String} An Amazon-defined order identifier, in 3-7-7 format.
    */

    constructor(amazonOrderId) {
        
        
        this['AmazonOrderId'] = amazonOrderId;
        
    }

    /**
    * Constructs a <code>OrderBuyerInfo</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:client/models/OrderBuyerInfo} obj Optional instance to populate.
    * @return {module:client/models/OrderBuyerInfo} The populated <code>OrderBuyerInfo</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderBuyerInfo();
                        
            
            if (data.hasOwnProperty('AmazonOrderId')) {
                obj['AmazonOrderId'] = ApiClient.convertToType(data['AmazonOrderId'], 'String');
            }
            if (data.hasOwnProperty('BuyerEmail')) {
                obj['BuyerEmail'] = ApiClient.convertToType(data['BuyerEmail'], 'String');
            }
            if (data.hasOwnProperty('BuyerName')) {
                obj['BuyerName'] = ApiClient.convertToType(data['BuyerName'], 'String');
            }
            if (data.hasOwnProperty('BuyerCounty')) {
                obj['BuyerCounty'] = ApiClient.convertToType(data['BuyerCounty'], 'String');
            }
            if (data.hasOwnProperty('BuyerTaxInfo')) {
                obj['BuyerTaxInfo'] = BuyerTaxInfo.constructFromObject(data['BuyerTaxInfo']);
            }
            if (data.hasOwnProperty('PurchaseOrderNumber')) {
                obj['PurchaseOrderNumber'] = ApiClient.convertToType(data['PurchaseOrderNumber'], 'String');
            }
        }
        return obj;
    }

    /**
    * An Amazon-defined order identifier, in 3-7-7 format.
    * @member {String} AmazonOrderId
    */
    'AmazonOrderId' = undefined;
    /**
    * The anonymized email address of the buyer.
    * @member {String} BuyerEmail
    */
    'BuyerEmail' = undefined;
    /**
    * The name of the buyer.
    * @member {String} BuyerName
    */
    'BuyerName' = undefined;
    /**
    * The county of the buyer.
    * @member {String} BuyerCounty
    */
    'BuyerCounty' = undefined;
    /**
    * @member {module:client/models/BuyerTaxInfo} BuyerTaxInfo
    */
    'BuyerTaxInfo' = undefined;
    /**
    * The purchase order (PO) number entered by the buyer at checkout. Returned only for orders where the buyer entered a PO number at checkout.
    * @member {String} PurchaseOrderNumber
    */
    'PurchaseOrderNumber' = undefined;




}
