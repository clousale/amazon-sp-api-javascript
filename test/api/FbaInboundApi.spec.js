/**
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFulfillmentInbound);
  }
}(this, function(expect, SellingPartnerApiForFulfillmentInbound) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForFulfillmentInbound.FbaInboundApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FbaInboundApi', function() {
    describe('confirmPreorder', function() {
      it('should call confirmPreorder successfully', function(done) {
        //uncomment below and update the code to test confirmPreorder
        //instance.confirmPreorder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmTransport', function() {
      it('should call confirmTransport successfully', function(done) {
        //uncomment below and update the code to test confirmTransport
        //instance.confirmTransport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInboundShipment', function() {
      it('should call createInboundShipment successfully', function(done) {
        //uncomment below and update the code to test createInboundShipment
        //instance.createInboundShipment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInboundShipmentPlan', function() {
      it('should call createInboundShipmentPlan successfully', function(done) {
        //uncomment below and update the code to test createInboundShipmentPlan
        //instance.createInboundShipmentPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('estimateTransport', function() {
      it('should call estimateTransport successfully', function(done) {
        //uncomment below and update the code to test estimateTransport
        //instance.estimateTransport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBillOfLading', function() {
      it('should call getBillOfLading successfully', function(done) {
        //uncomment below and update the code to test getBillOfLading
        //instance.getBillOfLading(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInboundGuidance', function() {
      it('should call getInboundGuidance successfully', function(done) {
        //uncomment below and update the code to test getInboundGuidance
        //instance.getInboundGuidance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLabels', function() {
      it('should call getLabels successfully', function(done) {
        //uncomment below and update the code to test getLabels
        //instance.getLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPreorderInfo', function() {
      it('should call getPreorderInfo successfully', function(done) {
        //uncomment below and update the code to test getPreorderInfo
        //instance.getPreorderInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPrepInstructions', function() {
      it('should call getPrepInstructions successfully', function(done) {
        //uncomment below and update the code to test getPrepInstructions
        //instance.getPrepInstructions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipmentItems', function() {
      it('should call getShipmentItems successfully', function(done) {
        //uncomment below and update the code to test getShipmentItems
        //instance.getShipmentItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipmentItemsByShipmentId', function() {
      it('should call getShipmentItemsByShipmentId successfully', function(done) {
        //uncomment below and update the code to test getShipmentItemsByShipmentId
        //instance.getShipmentItemsByShipmentId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipments', function() {
      it('should call getShipments successfully', function(done) {
        //uncomment below and update the code to test getShipments
        //instance.getShipments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransportDetails', function() {
      it('should call getTransportDetails successfully', function(done) {
        //uncomment below and update the code to test getTransportDetails
        //instance.getTransportDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putTransportDetails', function() {
      it('should call putTransportDetails successfully', function(done) {
        //uncomment below and update the code to test putTransportDetails
        //instance.putTransportDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInboundShipment', function() {
      it('should call updateInboundShipment successfully', function(done) {
        //uncomment below and update the code to test updateInboundShipment
        //instance.updateInboundShipment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('voidTransport', function() {
      it('should call voidTransport successfully', function(done) {
        //uncomment below and update the code to test voidTransport
        //instance.voidTransport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
