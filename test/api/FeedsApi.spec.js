/**
 * Selling Partner API for Feeds
 * The Selling Partner API for Feeds lets you upload data to Amazon on behalf of a selling partner.
 *
 * OpenAPI spec version: 2020-09-04
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFeeds);
  }
}(this, function(expect, SellingPartnerApiForFeeds) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForFeeds.FeedsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FeedsApi', function() {
    describe('cancelFeed', function() {
      it('should call cancelFeed successfully', function(done) {
        //uncomment below and update the code to test cancelFeed
        //instance.cancelFeed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFeed', function() {
      it('should call createFeed successfully', function(done) {
        //uncomment below and update the code to test createFeed
        //instance.createFeed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFeedDocument', function() {
      it('should call createFeedDocument successfully', function(done) {
        //uncomment below and update the code to test createFeedDocument
        //instance.createFeedDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeed', function() {
      it('should call getFeed successfully', function(done) {
        //uncomment below and update the code to test getFeed
        //instance.getFeed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedDocument', function() {
      it('should call getFeedDocument successfully', function(done) {
        //uncomment below and update the code to test getFeedDocument
        //instance.getFeedDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeeds', function() {
      it('should call getFeeds successfully', function(done) {
        //uncomment below and update the code to test getFeeds
        //instance.getFeeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
