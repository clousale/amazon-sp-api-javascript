/**
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForOrders);
  }
}(this, function(expect, SellingPartnerApiForOrders) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForOrders.OrderItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderItem', function() {
    it('should create an instance of OrderItem', function() {
      // uncomment below and update the code to test OrderItem
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be.a(SellingPartnerApiForOrders.OrderItem);
    });

    it('should have the property ASIN (base name: "ASIN")', function() {
      // uncomment below and update the code to test the property ASIN
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property sellerSKU (base name: "SellerSKU")', function() {
      // uncomment below and update the code to test the property sellerSKU
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property orderItemId (base name: "OrderItemId")', function() {
      // uncomment below and update the code to test the property orderItemId
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityOrdered (base name: "QuantityOrdered")', function() {
      // uncomment below and update the code to test the property quantityOrdered
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property quantityShipped (base name: "QuantityShipped")', function() {
      // uncomment below and update the code to test the property quantityShipped
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property productInfo (base name: "ProductInfo")', function() {
      // uncomment below and update the code to test the property productInfo
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property pointsGranted (base name: "PointsGranted")', function() {
      // uncomment below and update the code to test the property pointsGranted
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property itemPrice (base name: "ItemPrice")', function() {
      // uncomment below and update the code to test the property itemPrice
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property shippingPrice (base name: "ShippingPrice")', function() {
      // uncomment below and update the code to test the property shippingPrice
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property itemTax (base name: "ItemTax")', function() {
      // uncomment below and update the code to test the property itemTax
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property shippingTax (base name: "ShippingTax")', function() {
      // uncomment below and update the code to test the property shippingTax
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property shippingDiscount (base name: "ShippingDiscount")', function() {
      // uncomment below and update the code to test the property shippingDiscount
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property shippingDiscountTax (base name: "ShippingDiscountTax")', function() {
      // uncomment below and update the code to test the property shippingDiscountTax
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property promotionDiscount (base name: "PromotionDiscount")', function() {
      // uncomment below and update the code to test the property promotionDiscount
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property promotionDiscountTax (base name: "PromotionDiscountTax")', function() {
      // uncomment below and update the code to test the property promotionDiscountTax
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property promotionIds (base name: "PromotionIds")', function() {
      // uncomment below and update the code to test the property promotionIds
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property cODFee (base name: "CODFee")', function() {
      // uncomment below and update the code to test the property cODFee
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property cODFeeDiscount (base name: "CODFeeDiscount")', function() {
      // uncomment below and update the code to test the property cODFeeDiscount
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property isGift (base name: "IsGift")', function() {
      // uncomment below and update the code to test the property isGift
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property conditionNote (base name: "ConditionNote")', function() {
      // uncomment below and update the code to test the property conditionNote
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property conditionId (base name: "ConditionId")', function() {
      // uncomment below and update the code to test the property conditionId
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property conditionSubtypeId (base name: "ConditionSubtypeId")', function() {
      // uncomment below and update the code to test the property conditionSubtypeId
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property scheduledDeliveryStartDate (base name: "ScheduledDeliveryStartDate")', function() {
      // uncomment below and update the code to test the property scheduledDeliveryStartDate
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property scheduledDeliveryEndDate (base name: "ScheduledDeliveryEndDate")', function() {
      // uncomment below and update the code to test the property scheduledDeliveryEndDate
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property priceDesignation (base name: "PriceDesignation")', function() {
      // uncomment below and update the code to test the property priceDesignation
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property taxCollection (base name: "TaxCollection")', function() {
      // uncomment below and update the code to test the property taxCollection
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property serialNumberRequired (base name: "SerialNumberRequired")', function() {
      // uncomment below and update the code to test the property serialNumberRequired
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property isTransparency (base name: "IsTransparency")', function() {
      // uncomment below and update the code to test the property isTransparency
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property iossNumber (base name: "IossNumber")', function() {
      // uncomment below and update the code to test the property iossNumber
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property deemedResellerCategory (base name: "DeemedResellerCategory")', function() {
      // uncomment below and update the code to test the property deemedResellerCategory
      //var instane = new SellingPartnerApiForOrders.OrderItem();
      //expect(instance).to.be();
    });

  });

}));
