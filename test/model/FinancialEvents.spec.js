/**
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFinances);
  }
}(this, function(expect, SellingPartnerApiForFinances) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForFinances.FinancialEvents();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FinancialEvents', function() {
    it('should create an instance of FinancialEvents', function() {
      // uncomment below and update the code to test FinancialEvents
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be.a(SellingPartnerApiForFinances.FinancialEvents);
    });

    it('should have the property shipmentEventList (base name: "ShipmentEventList")', function() {
      // uncomment below and update the code to test the property shipmentEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property refundEventList (base name: "RefundEventList")', function() {
      // uncomment below and update the code to test the property refundEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property guaranteeClaimEventList (base name: "GuaranteeClaimEventList")', function() {
      // uncomment below and update the code to test the property guaranteeClaimEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property chargebackEventList (base name: "ChargebackEventList")', function() {
      // uncomment below and update the code to test the property chargebackEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property payWithAmazonEventList (base name: "PayWithAmazonEventList")', function() {
      // uncomment below and update the code to test the property payWithAmazonEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property serviceProviderCreditEventList (base name: "ServiceProviderCreditEventList")', function() {
      // uncomment below and update the code to test the property serviceProviderCreditEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property retrochargeEventList (base name: "RetrochargeEventList")', function() {
      // uncomment below and update the code to test the property retrochargeEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property rentalTransactionEventList (base name: "RentalTransactionEventList")', function() {
      // uncomment below and update the code to test the property rentalTransactionEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property productAdsPaymentEventList (base name: "ProductAdsPaymentEventList")', function() {
      // uncomment below and update the code to test the property productAdsPaymentEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property serviceFeeEventList (base name: "ServiceFeeEventList")', function() {
      // uncomment below and update the code to test the property serviceFeeEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property sellerDealPaymentEventList (base name: "SellerDealPaymentEventList")', function() {
      // uncomment below and update the code to test the property sellerDealPaymentEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property debtRecoveryEventList (base name: "DebtRecoveryEventList")', function() {
      // uncomment below and update the code to test the property debtRecoveryEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property loanServicingEventList (base name: "LoanServicingEventList")', function() {
      // uncomment below and update the code to test the property loanServicingEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentEventList (base name: "AdjustmentEventList")', function() {
      // uncomment below and update the code to test the property adjustmentEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property sAFETReimbursementEventList (base name: "SAFETReimbursementEventList")', function() {
      // uncomment below and update the code to test the property sAFETReimbursementEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property sellerReviewEnrollmentPaymentEventList (base name: "SellerReviewEnrollmentPaymentEventList")', function() {
      // uncomment below and update the code to test the property sellerReviewEnrollmentPaymentEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property fBALiquidationEventList (base name: "FBALiquidationEventList")', function() {
      // uncomment below and update the code to test the property fBALiquidationEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property couponPaymentEventList (base name: "CouponPaymentEventList")', function() {
      // uncomment below and update the code to test the property couponPaymentEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property imagingServicesFeeEventList (base name: "ImagingServicesFeeEventList")', function() {
      // uncomment below and update the code to test the property imagingServicesFeeEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property networkComminglingTransactionEventList (base name: "NetworkComminglingTransactionEventList")', function() {
      // uncomment below and update the code to test the property networkComminglingTransactionEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property affordabilityExpenseEventList (base name: "AffordabilityExpenseEventList")', function() {
      // uncomment below and update the code to test the property affordabilityExpenseEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

    it('should have the property affordabilityExpenseReversalEventList (base name: "AffordabilityExpenseReversalEventList")', function() {
      // uncomment below and update the code to test the property affordabilityExpenseReversalEventList
      //var instane = new SellingPartnerApiForFinances.FinancialEvents();
      //expect(instance).to.be();
    });

  });

}));
